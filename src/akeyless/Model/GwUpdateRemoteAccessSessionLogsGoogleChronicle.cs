/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// gwUpdateRemoteAccessSessionLogsGoogleChronicle is a command that updates session log forwarding config (google-chronicle target)
    /// </summary>
    [DataContract(Name = "gwUpdateRemoteAccessSessionLogsGoogleChronicle")]
    public partial class GwUpdateRemoteAccessSessionLogsGoogleChronicle : IEquatable<GwUpdateRemoteAccessSessionLogsGoogleChronicle>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GwUpdateRemoteAccessSessionLogsGoogleChronicle" /> class.
        /// </summary>
        /// <param name="customerId">Google chronicle customer id.</param>
        /// <param name="enable">Enable Log Forwarding [true/false] (default to &quot;true&quot;).</param>
        /// <param name="gcpKey">Base64-encoded service account private key text.</param>
        /// <param name="json">Set output format to JSON (default to false).</param>
        /// <param name="logType">Google chronicle log type.</param>
        /// <param name="outputFormat">Logs format [text/json] (default to &quot;text&quot;).</param>
        /// <param name="pullInterval">Pull interval in seconds (default to &quot;10&quot;).</param>
        /// <param name="region">Google chronicle region [eu_multi_region/london/us_multi_region/singapore/tel_aviv].</param>
        /// <param name="token">Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;).</param>
        /// <param name="uidToken">The universal identity token, Required only for universal_identity authentication.</param>
        public GwUpdateRemoteAccessSessionLogsGoogleChronicle(string customerId = default(string), string enable = "true", string gcpKey = default(string), bool json = false, string logType = default(string), string outputFormat = "text", string pullInterval = "10", string region = default(string), string token = default(string), string uidToken = default(string))
        {
            this.CustomerId = customerId;
            // use default value if no "enable" provided
            this.Enable = enable ?? "true";
            this.GcpKey = gcpKey;
            this.Json = json;
            this.LogType = logType;
            // use default value if no "outputFormat" provided
            this.OutputFormat = outputFormat ?? "text";
            // use default value if no "pullInterval" provided
            this.PullInterval = pullInterval ?? "10";
            this.Region = region;
            this.Token = token;
            this.UidToken = uidToken;
        }

        /// <summary>
        /// Google chronicle customer id
        /// </summary>
        /// <value>Google chronicle customer id</value>
        [DataMember(Name = "customer-id", EmitDefaultValue = false)]
        public string CustomerId { get; set; }

        /// <summary>
        /// Enable Log Forwarding [true/false]
        /// </summary>
        /// <value>Enable Log Forwarding [true/false]</value>
        [DataMember(Name = "enable", EmitDefaultValue = false)]
        public string Enable { get; set; }

        /// <summary>
        /// Base64-encoded service account private key text
        /// </summary>
        /// <value>Base64-encoded service account private key text</value>
        [DataMember(Name = "gcp-key", EmitDefaultValue = false)]
        public string GcpKey { get; set; }

        /// <summary>
        /// Set output format to JSON
        /// </summary>
        /// <value>Set output format to JSON</value>
        [DataMember(Name = "json", EmitDefaultValue = true)]
        public bool Json { get; set; }

        /// <summary>
        /// Google chronicle log type
        /// </summary>
        /// <value>Google chronicle log type</value>
        [DataMember(Name = "log-type", EmitDefaultValue = false)]
        public string LogType { get; set; }

        /// <summary>
        /// Logs format [text/json]
        /// </summary>
        /// <value>Logs format [text/json]</value>
        [DataMember(Name = "output-format", EmitDefaultValue = false)]
        public string OutputFormat { get; set; }

        /// <summary>
        /// Pull interval in seconds
        /// </summary>
        /// <value>Pull interval in seconds</value>
        [DataMember(Name = "pull-interval", EmitDefaultValue = false)]
        public string PullInterval { get; set; }

        /// <summary>
        /// Google chronicle region [eu_multi_region/london/us_multi_region/singapore/tel_aviv]
        /// </summary>
        /// <value>Google chronicle region [eu_multi_region/london/us_multi_region/singapore/tel_aviv]</value>
        [DataMember(Name = "region", EmitDefaultValue = false)]
        public string Region { get; set; }

        /// <summary>
        /// Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
        /// </summary>
        /// <value>Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)</value>
        [DataMember(Name = "token", EmitDefaultValue = false)]
        public string Token { get; set; }

        /// <summary>
        /// The universal identity token, Required only for universal_identity authentication
        /// </summary>
        /// <value>The universal identity token, Required only for universal_identity authentication</value>
        [DataMember(Name = "uid-token", EmitDefaultValue = false)]
        public string UidToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GwUpdateRemoteAccessSessionLogsGoogleChronicle {\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  Enable: ").Append(Enable).Append("\n");
            sb.Append("  GcpKey: ").Append(GcpKey).Append("\n");
            sb.Append("  Json: ").Append(Json).Append("\n");
            sb.Append("  LogType: ").Append(LogType).Append("\n");
            sb.Append("  OutputFormat: ").Append(OutputFormat).Append("\n");
            sb.Append("  PullInterval: ").Append(PullInterval).Append("\n");
            sb.Append("  Region: ").Append(Region).Append("\n");
            sb.Append("  Token: ").Append(Token).Append("\n");
            sb.Append("  UidToken: ").Append(UidToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GwUpdateRemoteAccessSessionLogsGoogleChronicle);
        }

        /// <summary>
        /// Returns true if GwUpdateRemoteAccessSessionLogsGoogleChronicle instances are equal
        /// </summary>
        /// <param name="input">Instance of GwUpdateRemoteAccessSessionLogsGoogleChronicle to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GwUpdateRemoteAccessSessionLogsGoogleChronicle input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.CustomerId == input.CustomerId ||
                    (this.CustomerId != null &&
                    this.CustomerId.Equals(input.CustomerId))
                ) && 
                (
                    this.Enable == input.Enable ||
                    (this.Enable != null &&
                    this.Enable.Equals(input.Enable))
                ) && 
                (
                    this.GcpKey == input.GcpKey ||
                    (this.GcpKey != null &&
                    this.GcpKey.Equals(input.GcpKey))
                ) && 
                (
                    this.Json == input.Json ||
                    this.Json.Equals(input.Json)
                ) && 
                (
                    this.LogType == input.LogType ||
                    (this.LogType != null &&
                    this.LogType.Equals(input.LogType))
                ) && 
                (
                    this.OutputFormat == input.OutputFormat ||
                    (this.OutputFormat != null &&
                    this.OutputFormat.Equals(input.OutputFormat))
                ) && 
                (
                    this.PullInterval == input.PullInterval ||
                    (this.PullInterval != null &&
                    this.PullInterval.Equals(input.PullInterval))
                ) && 
                (
                    this.Region == input.Region ||
                    (this.Region != null &&
                    this.Region.Equals(input.Region))
                ) && 
                (
                    this.Token == input.Token ||
                    (this.Token != null &&
                    this.Token.Equals(input.Token))
                ) && 
                (
                    this.UidToken == input.UidToken ||
                    (this.UidToken != null &&
                    this.UidToken.Equals(input.UidToken))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CustomerId != null)
                {
                    hashCode = (hashCode * 59) + this.CustomerId.GetHashCode();
                }
                if (this.Enable != null)
                {
                    hashCode = (hashCode * 59) + this.Enable.GetHashCode();
                }
                if (this.GcpKey != null)
                {
                    hashCode = (hashCode * 59) + this.GcpKey.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.Json.GetHashCode();
                if (this.LogType != null)
                {
                    hashCode = (hashCode * 59) + this.LogType.GetHashCode();
                }
                if (this.OutputFormat != null)
                {
                    hashCode = (hashCode * 59) + this.OutputFormat.GetHashCode();
                }
                if (this.PullInterval != null)
                {
                    hashCode = (hashCode * 59) + this.PullInterval.GetHashCode();
                }
                if (this.Region != null)
                {
                    hashCode = (hashCode * 59) + this.Region.GetHashCode();
                }
                if (this.Token != null)
                {
                    hashCode = (hashCode * 59) + this.Token.GetHashCode();
                }
                if (this.UidToken != null)
                {
                    hashCode = (hashCode * 59) + this.UidToken.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
