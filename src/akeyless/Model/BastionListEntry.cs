/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// BastionListEntry
    /// </summary>
    [DataContract(Name = "BastionListEntry")]
    public partial class BastionListEntry : IEquatable<BastionListEntry>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BastionListEntry" /> class.
        /// </summary>
        /// <param name="accessId">accessId.</param>
        /// <param name="allowedAccessIds">allowedAccessIds.</param>
        /// <param name="allowedUrls">allowedUrls.</param>
        /// <param name="clusterName">clusterName.</param>
        /// <param name="displayName">displayName.</param>
        /// <param name="lastReport">lastReport.</param>
        public BastionListEntry(string accessId = default(string), List<string> allowedAccessIds = default(List<string>), List<string> allowedUrls = default(List<string>), string clusterName = default(string), string displayName = default(string), DateTime lastReport = default(DateTime))
        {
            this.AccessId = accessId;
            this.AllowedAccessIds = allowedAccessIds;
            this.AllowedUrls = allowedUrls;
            this.ClusterName = clusterName;
            this.DisplayName = displayName;
            this.LastReport = lastReport;
        }

        /// <summary>
        /// Gets or Sets AccessId
        /// </summary>
        [DataMember(Name = "access_id", EmitDefaultValue = false)]
        public string AccessId { get; set; }

        /// <summary>
        /// Gets or Sets AllowedAccessIds
        /// </summary>
        [DataMember(Name = "allowed_access_ids", EmitDefaultValue = false)]
        public List<string> AllowedAccessIds { get; set; }

        /// <summary>
        /// Gets or Sets AllowedUrls
        /// </summary>
        [DataMember(Name = "allowed_urls", EmitDefaultValue = false)]
        public List<string> AllowedUrls { get; set; }

        /// <summary>
        /// Gets or Sets ClusterName
        /// </summary>
        [DataMember(Name = "cluster_name", EmitDefaultValue = false)]
        public string ClusterName { get; set; }

        /// <summary>
        /// Gets or Sets DisplayName
        /// </summary>
        [DataMember(Name = "display_name", EmitDefaultValue = false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// Gets or Sets LastReport
        /// </summary>
        [DataMember(Name = "last_report", EmitDefaultValue = false)]
        public DateTime LastReport { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class BastionListEntry {\n");
            sb.Append("  AccessId: ").Append(AccessId).Append("\n");
            sb.Append("  AllowedAccessIds: ").Append(AllowedAccessIds).Append("\n");
            sb.Append("  AllowedUrls: ").Append(AllowedUrls).Append("\n");
            sb.Append("  ClusterName: ").Append(ClusterName).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  LastReport: ").Append(LastReport).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as BastionListEntry);
        }

        /// <summary>
        /// Returns true if BastionListEntry instances are equal
        /// </summary>
        /// <param name="input">Instance of BastionListEntry to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(BastionListEntry input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AccessId == input.AccessId ||
                    (this.AccessId != null &&
                    this.AccessId.Equals(input.AccessId))
                ) && 
                (
                    this.AllowedAccessIds == input.AllowedAccessIds ||
                    this.AllowedAccessIds != null &&
                    input.AllowedAccessIds != null &&
                    this.AllowedAccessIds.SequenceEqual(input.AllowedAccessIds)
                ) && 
                (
                    this.AllowedUrls == input.AllowedUrls ||
                    this.AllowedUrls != null &&
                    input.AllowedUrls != null &&
                    this.AllowedUrls.SequenceEqual(input.AllowedUrls)
                ) && 
                (
                    this.ClusterName == input.ClusterName ||
                    (this.ClusterName != null &&
                    this.ClusterName.Equals(input.ClusterName))
                ) && 
                (
                    this.DisplayName == input.DisplayName ||
                    (this.DisplayName != null &&
                    this.DisplayName.Equals(input.DisplayName))
                ) && 
                (
                    this.LastReport == input.LastReport ||
                    (this.LastReport != null &&
                    this.LastReport.Equals(input.LastReport))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AccessId != null)
                    hashCode = hashCode * 59 + this.AccessId.GetHashCode();
                if (this.AllowedAccessIds != null)
                    hashCode = hashCode * 59 + this.AllowedAccessIds.GetHashCode();
                if (this.AllowedUrls != null)
                    hashCode = hashCode * 59 + this.AllowedUrls.GetHashCode();
                if (this.ClusterName != null)
                    hashCode = hashCode * 59 + this.ClusterName.GetHashCode();
                if (this.DisplayName != null)
                    hashCode = hashCode * 59 + this.DisplayName.GetHashCode();
                if (this.LastReport != null)
                    hashCode = hashCode * 59 + this.LastReport.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
