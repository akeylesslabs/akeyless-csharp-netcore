/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// MigrationsConfigPart
    /// </summary>
    [DataContract(Name = "MigrationsConfigPart")]
    public partial class MigrationsConfigPart : IEquatable<MigrationsConfigPart>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MigrationsConfigPart" /> class.
        /// </summary>
        /// <param name="activeDirectoryMigrations">activeDirectoryMigrations.</param>
        /// <param name="awsSecretsMigrations">awsSecretsMigrations.</param>
        /// <param name="azureKvMigrations">azureKvMigrations.</param>
        /// <param name="gcpSecretsMigrations">gcpSecretsMigrations.</param>
        /// <param name="hashiMigrations">hashiMigrations.</param>
        /// <param name="k8sMigrations">k8sMigrations.</param>
        /// <param name="mockMigrations">mockMigrations.</param>
        /// <param name="onePasswordMigrations">onePasswordMigrations.</param>
        /// <param name="serverInventoryMigrations">serverInventoryMigrations.</param>
        public MigrationsConfigPart(List<ActiveDirectoryMigration> activeDirectoryMigrations = default(List<ActiveDirectoryMigration>), List<AWSSecretsMigration> awsSecretsMigrations = default(List<AWSSecretsMigration>), List<AzureKeyVaultMigration> azureKvMigrations = default(List<AzureKeyVaultMigration>), List<GCPSecretsMigration> gcpSecretsMigrations = default(List<GCPSecretsMigration>), List<HashiMigration> hashiMigrations = default(List<HashiMigration>), List<K8SMigration> k8sMigrations = default(List<K8SMigration>), List<MockMigration> mockMigrations = default(List<MockMigration>), List<OnePasswordMigration> onePasswordMigrations = default(List<OnePasswordMigration>), List<ServerInventoryMigration> serverInventoryMigrations = default(List<ServerInventoryMigration>))
        {
            this.ActiveDirectoryMigrations = activeDirectoryMigrations;
            this.AwsSecretsMigrations = awsSecretsMigrations;
            this.AzureKvMigrations = azureKvMigrations;
            this.GcpSecretsMigrations = gcpSecretsMigrations;
            this.HashiMigrations = hashiMigrations;
            this.K8sMigrations = k8sMigrations;
            this.MockMigrations = mockMigrations;
            this.OnePasswordMigrations = onePasswordMigrations;
            this.ServerInventoryMigrations = serverInventoryMigrations;
        }

        /// <summary>
        /// Gets or Sets ActiveDirectoryMigrations
        /// </summary>
        [DataMember(Name = "active_directory_migrations", EmitDefaultValue = false)]
        public List<ActiveDirectoryMigration> ActiveDirectoryMigrations { get; set; }

        /// <summary>
        /// Gets or Sets AwsSecretsMigrations
        /// </summary>
        [DataMember(Name = "aws_secrets_migrations", EmitDefaultValue = false)]
        public List<AWSSecretsMigration> AwsSecretsMigrations { get; set; }

        /// <summary>
        /// Gets or Sets AzureKvMigrations
        /// </summary>
        [DataMember(Name = "azure_kv_migrations", EmitDefaultValue = false)]
        public List<AzureKeyVaultMigration> AzureKvMigrations { get; set; }

        /// <summary>
        /// Gets or Sets GcpSecretsMigrations
        /// </summary>
        [DataMember(Name = "gcp_secrets_migrations", EmitDefaultValue = false)]
        public List<GCPSecretsMigration> GcpSecretsMigrations { get; set; }

        /// <summary>
        /// Gets or Sets HashiMigrations
        /// </summary>
        [DataMember(Name = "hashi_migrations", EmitDefaultValue = false)]
        public List<HashiMigration> HashiMigrations { get; set; }

        /// <summary>
        /// Gets or Sets K8sMigrations
        /// </summary>
        [DataMember(Name = "k8s_migrations", EmitDefaultValue = false)]
        public List<K8SMigration> K8sMigrations { get; set; }

        /// <summary>
        /// Gets or Sets MockMigrations
        /// </summary>
        [DataMember(Name = "mock_migrations", EmitDefaultValue = false)]
        public List<MockMigration> MockMigrations { get; set; }

        /// <summary>
        /// Gets or Sets OnePasswordMigrations
        /// </summary>
        [DataMember(Name = "one_password_migrations", EmitDefaultValue = false)]
        public List<OnePasswordMigration> OnePasswordMigrations { get; set; }

        /// <summary>
        /// Gets or Sets ServerInventoryMigrations
        /// </summary>
        [DataMember(Name = "server_inventory_migrations", EmitDefaultValue = false)]
        public List<ServerInventoryMigration> ServerInventoryMigrations { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MigrationsConfigPart {\n");
            sb.Append("  ActiveDirectoryMigrations: ").Append(ActiveDirectoryMigrations).Append("\n");
            sb.Append("  AwsSecretsMigrations: ").Append(AwsSecretsMigrations).Append("\n");
            sb.Append("  AzureKvMigrations: ").Append(AzureKvMigrations).Append("\n");
            sb.Append("  GcpSecretsMigrations: ").Append(GcpSecretsMigrations).Append("\n");
            sb.Append("  HashiMigrations: ").Append(HashiMigrations).Append("\n");
            sb.Append("  K8sMigrations: ").Append(K8sMigrations).Append("\n");
            sb.Append("  MockMigrations: ").Append(MockMigrations).Append("\n");
            sb.Append("  OnePasswordMigrations: ").Append(OnePasswordMigrations).Append("\n");
            sb.Append("  ServerInventoryMigrations: ").Append(ServerInventoryMigrations).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MigrationsConfigPart);
        }

        /// <summary>
        /// Returns true if MigrationsConfigPart instances are equal
        /// </summary>
        /// <param name="input">Instance of MigrationsConfigPart to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MigrationsConfigPart input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ActiveDirectoryMigrations == input.ActiveDirectoryMigrations ||
                    this.ActiveDirectoryMigrations != null &&
                    input.ActiveDirectoryMigrations != null &&
                    this.ActiveDirectoryMigrations.SequenceEqual(input.ActiveDirectoryMigrations)
                ) && 
                (
                    this.AwsSecretsMigrations == input.AwsSecretsMigrations ||
                    this.AwsSecretsMigrations != null &&
                    input.AwsSecretsMigrations != null &&
                    this.AwsSecretsMigrations.SequenceEqual(input.AwsSecretsMigrations)
                ) && 
                (
                    this.AzureKvMigrations == input.AzureKvMigrations ||
                    this.AzureKvMigrations != null &&
                    input.AzureKvMigrations != null &&
                    this.AzureKvMigrations.SequenceEqual(input.AzureKvMigrations)
                ) && 
                (
                    this.GcpSecretsMigrations == input.GcpSecretsMigrations ||
                    this.GcpSecretsMigrations != null &&
                    input.GcpSecretsMigrations != null &&
                    this.GcpSecretsMigrations.SequenceEqual(input.GcpSecretsMigrations)
                ) && 
                (
                    this.HashiMigrations == input.HashiMigrations ||
                    this.HashiMigrations != null &&
                    input.HashiMigrations != null &&
                    this.HashiMigrations.SequenceEqual(input.HashiMigrations)
                ) && 
                (
                    this.K8sMigrations == input.K8sMigrations ||
                    this.K8sMigrations != null &&
                    input.K8sMigrations != null &&
                    this.K8sMigrations.SequenceEqual(input.K8sMigrations)
                ) && 
                (
                    this.MockMigrations == input.MockMigrations ||
                    this.MockMigrations != null &&
                    input.MockMigrations != null &&
                    this.MockMigrations.SequenceEqual(input.MockMigrations)
                ) && 
                (
                    this.OnePasswordMigrations == input.OnePasswordMigrations ||
                    this.OnePasswordMigrations != null &&
                    input.OnePasswordMigrations != null &&
                    this.OnePasswordMigrations.SequenceEqual(input.OnePasswordMigrations)
                ) && 
                (
                    this.ServerInventoryMigrations == input.ServerInventoryMigrations ||
                    this.ServerInventoryMigrations != null &&
                    input.ServerInventoryMigrations != null &&
                    this.ServerInventoryMigrations.SequenceEqual(input.ServerInventoryMigrations)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ActiveDirectoryMigrations != null)
                {
                    hashCode = (hashCode * 59) + this.ActiveDirectoryMigrations.GetHashCode();
                }
                if (this.AwsSecretsMigrations != null)
                {
                    hashCode = (hashCode * 59) + this.AwsSecretsMigrations.GetHashCode();
                }
                if (this.AzureKvMigrations != null)
                {
                    hashCode = (hashCode * 59) + this.AzureKvMigrations.GetHashCode();
                }
                if (this.GcpSecretsMigrations != null)
                {
                    hashCode = (hashCode * 59) + this.GcpSecretsMigrations.GetHashCode();
                }
                if (this.HashiMigrations != null)
                {
                    hashCode = (hashCode * 59) + this.HashiMigrations.GetHashCode();
                }
                if (this.K8sMigrations != null)
                {
                    hashCode = (hashCode * 59) + this.K8sMigrations.GetHashCode();
                }
                if (this.MockMigrations != null)
                {
                    hashCode = (hashCode * 59) + this.MockMigrations.GetHashCode();
                }
                if (this.OnePasswordMigrations != null)
                {
                    hashCode = (hashCode * 59) + this.OnePasswordMigrations.GetHashCode();
                }
                if (this.ServerInventoryMigrations != null)
                {
                    hashCode = (hashCode * 59) + this.ServerInventoryMigrations.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
