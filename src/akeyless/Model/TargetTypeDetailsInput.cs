/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// TargetTypeDetailsInput
    /// </summary>
    [DataContract(Name = "TargetTypeDetailsInput")]
    public partial class TargetTypeDetailsInput : IEquatable<TargetTypeDetailsInput>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TargetTypeDetailsInput" /> class.
        /// </summary>
        /// <param name="artifactoryTargetDetails">artifactoryTargetDetails.</param>
        /// <param name="awsTargetDetails">awsTargetDetails.</param>
        /// <param name="azureTargetDetails">azureTargetDetails.</param>
        /// <param name="chefTargetDetails">chefTargetDetails.</param>
        /// <param name="customTargetDetails">customTargetDetails.</param>
        /// <param name="dbTargetDetails">dbTargetDetails.</param>
        /// <param name="dockerhubTargetDetails">dockerhubTargetDetails.</param>
        /// <param name="eksTargetDetails">eksTargetDetails.</param>
        /// <param name="gcpTargetDetails">gcpTargetDetails.</param>
        /// <param name="githubTargetDetails">githubTargetDetails.</param>
        /// <param name="gitlabTargetDetails">gitlabTargetDetails.</param>
        /// <param name="gkeTargetDetails">gkeTargetDetails.</param>
        /// <param name="globalsignAtlasTargetDetails">globalsignAtlasTargetDetails.</param>
        /// <param name="globalsignTargetDetails">globalsignTargetDetails.</param>
        /// <param name="godaddyTargetDetails">godaddyTargetDetails.</param>
        /// <param name="hashiVaultTargetDetails">hashiVaultTargetDetails.</param>
        /// <param name="ldapTargetDetails">ldapTargetDetails.</param>
        /// <param name="linkedTargetDetails">linkedTargetDetails.</param>
        /// <param name="mongoDbTargetDetails">mongoDbTargetDetails.</param>
        /// <param name="nativeK8sTargetDetails">nativeK8sTargetDetails.</param>
        /// <param name="pingTargetDetails">pingTargetDetails.</param>
        /// <param name="rabbitMqTargetDetails">rabbitMqTargetDetails.</param>
        /// <param name="salesforceTargetDetails">salesforceTargetDetails.</param>
        /// <param name="sshTargetDetails">sshTargetDetails.</param>
        /// <param name="venafiTargetDetails">venafiTargetDetails.</param>
        /// <param name="webTargetDetails">webTargetDetails.</param>
        /// <param name="windowsTargetDetails">windowsTargetDetails.</param>
        /// <param name="zerosslTargetDetails">zerosslTargetDetails.</param>
        public TargetTypeDetailsInput(ArtifactoryTargetDetails artifactoryTargetDetails = default(ArtifactoryTargetDetails), AWSTargetDetails awsTargetDetails = default(AWSTargetDetails), AzureTargetDetails azureTargetDetails = default(AzureTargetDetails), ChefTargetDetails chefTargetDetails = default(ChefTargetDetails), CustomTargetDetails customTargetDetails = default(CustomTargetDetails), DbTargetDetails dbTargetDetails = default(DbTargetDetails), DockerhubTargetDetails dockerhubTargetDetails = default(DockerhubTargetDetails), EKSTargetDetails eksTargetDetails = default(EKSTargetDetails), GcpTargetDetails gcpTargetDetails = default(GcpTargetDetails), GithubTargetDetails githubTargetDetails = default(GithubTargetDetails), GitlabTargetDetails gitlabTargetDetails = default(GitlabTargetDetails), GKETargetDetails gkeTargetDetails = default(GKETargetDetails), GlobalSignAtlasTargetDetails globalsignAtlasTargetDetails = default(GlobalSignAtlasTargetDetails), GlobalSignGCCTargetDetails globalsignTargetDetails = default(GlobalSignGCCTargetDetails), GodaddyTargetDetails godaddyTargetDetails = default(GodaddyTargetDetails), HashiVaultTargetDetails hashiVaultTargetDetails = default(HashiVaultTargetDetails), LdapTargetDetails ldapTargetDetails = default(LdapTargetDetails), LinkedTargetDetails linkedTargetDetails = default(LinkedTargetDetails), MongoDBTargetDetails mongoDbTargetDetails = default(MongoDBTargetDetails), NativeK8sTargetDetails nativeK8sTargetDetails = default(NativeK8sTargetDetails), PingTargetDetails pingTargetDetails = default(PingTargetDetails), RabbitMQTargetDetails rabbitMqTargetDetails = default(RabbitMQTargetDetails), SalesforceTargetDetails salesforceTargetDetails = default(SalesforceTargetDetails), SSHTargetDetails sshTargetDetails = default(SSHTargetDetails), VenafiTargetDetails venafiTargetDetails = default(VenafiTargetDetails), WebTargetDetails webTargetDetails = default(WebTargetDetails), WindowsTargetDetails windowsTargetDetails = default(WindowsTargetDetails), ZeroSSLTargetDetails zerosslTargetDetails = default(ZeroSSLTargetDetails))
        {
            this.ArtifactoryTargetDetails = artifactoryTargetDetails;
            this.AwsTargetDetails = awsTargetDetails;
            this.AzureTargetDetails = azureTargetDetails;
            this.ChefTargetDetails = chefTargetDetails;
            this.CustomTargetDetails = customTargetDetails;
            this.DbTargetDetails = dbTargetDetails;
            this.DockerhubTargetDetails = dockerhubTargetDetails;
            this.EksTargetDetails = eksTargetDetails;
            this.GcpTargetDetails = gcpTargetDetails;
            this.GithubTargetDetails = githubTargetDetails;
            this.GitlabTargetDetails = gitlabTargetDetails;
            this.GkeTargetDetails = gkeTargetDetails;
            this.GlobalsignAtlasTargetDetails = globalsignAtlasTargetDetails;
            this.GlobalsignTargetDetails = globalsignTargetDetails;
            this.GodaddyTargetDetails = godaddyTargetDetails;
            this.HashiVaultTargetDetails = hashiVaultTargetDetails;
            this.LdapTargetDetails = ldapTargetDetails;
            this.LinkedTargetDetails = linkedTargetDetails;
            this.MongoDbTargetDetails = mongoDbTargetDetails;
            this.NativeK8sTargetDetails = nativeK8sTargetDetails;
            this.PingTargetDetails = pingTargetDetails;
            this.RabbitMqTargetDetails = rabbitMqTargetDetails;
            this.SalesforceTargetDetails = salesforceTargetDetails;
            this.SshTargetDetails = sshTargetDetails;
            this.VenafiTargetDetails = venafiTargetDetails;
            this.WebTargetDetails = webTargetDetails;
            this.WindowsTargetDetails = windowsTargetDetails;
            this.ZerosslTargetDetails = zerosslTargetDetails;
        }

        /// <summary>
        /// Gets or Sets ArtifactoryTargetDetails
        /// </summary>
        [DataMember(Name = "artifactory_target_details", EmitDefaultValue = false)]
        public ArtifactoryTargetDetails ArtifactoryTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets AwsTargetDetails
        /// </summary>
        [DataMember(Name = "aws_target_details", EmitDefaultValue = false)]
        public AWSTargetDetails AwsTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets AzureTargetDetails
        /// </summary>
        [DataMember(Name = "azure_target_details", EmitDefaultValue = false)]
        public AzureTargetDetails AzureTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets ChefTargetDetails
        /// </summary>
        [DataMember(Name = "chef_target_details", EmitDefaultValue = false)]
        public ChefTargetDetails ChefTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets CustomTargetDetails
        /// </summary>
        [DataMember(Name = "custom_target_details", EmitDefaultValue = false)]
        public CustomTargetDetails CustomTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets DbTargetDetails
        /// </summary>
        [DataMember(Name = "db_target_details", EmitDefaultValue = false)]
        public DbTargetDetails DbTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets DockerhubTargetDetails
        /// </summary>
        [DataMember(Name = "dockerhub_target_details", EmitDefaultValue = false)]
        public DockerhubTargetDetails DockerhubTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets EksTargetDetails
        /// </summary>
        [DataMember(Name = "eks_target_details", EmitDefaultValue = false)]
        public EKSTargetDetails EksTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets GcpTargetDetails
        /// </summary>
        [DataMember(Name = "gcp_target_details", EmitDefaultValue = false)]
        public GcpTargetDetails GcpTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets GithubTargetDetails
        /// </summary>
        [DataMember(Name = "github_target_details", EmitDefaultValue = false)]
        public GithubTargetDetails GithubTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets GitlabTargetDetails
        /// </summary>
        [DataMember(Name = "gitlab_target_details", EmitDefaultValue = false)]
        public GitlabTargetDetails GitlabTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets GkeTargetDetails
        /// </summary>
        [DataMember(Name = "gke_target_details", EmitDefaultValue = false)]
        public GKETargetDetails GkeTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets GlobalsignAtlasTargetDetails
        /// </summary>
        [DataMember(Name = "globalsign_atlas_target_details", EmitDefaultValue = false)]
        public GlobalSignAtlasTargetDetails GlobalsignAtlasTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets GlobalsignTargetDetails
        /// </summary>
        [DataMember(Name = "globalsign_target_details", EmitDefaultValue = false)]
        public GlobalSignGCCTargetDetails GlobalsignTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets GodaddyTargetDetails
        /// </summary>
        [DataMember(Name = "godaddy_target_details", EmitDefaultValue = false)]
        public GodaddyTargetDetails GodaddyTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets HashiVaultTargetDetails
        /// </summary>
        [DataMember(Name = "hashi_vault_target_details", EmitDefaultValue = false)]
        public HashiVaultTargetDetails HashiVaultTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets LdapTargetDetails
        /// </summary>
        [DataMember(Name = "ldap_target_details", EmitDefaultValue = false)]
        public LdapTargetDetails LdapTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets LinkedTargetDetails
        /// </summary>
        [DataMember(Name = "linked_target_details", EmitDefaultValue = false)]
        public LinkedTargetDetails LinkedTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets MongoDbTargetDetails
        /// </summary>
        [DataMember(Name = "mongo_db_target_details", EmitDefaultValue = false)]
        public MongoDBTargetDetails MongoDbTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets NativeK8sTargetDetails
        /// </summary>
        [DataMember(Name = "native_k8s_target_details", EmitDefaultValue = false)]
        public NativeK8sTargetDetails NativeK8sTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets PingTargetDetails
        /// </summary>
        [DataMember(Name = "ping_target_details", EmitDefaultValue = false)]
        public PingTargetDetails PingTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets RabbitMqTargetDetails
        /// </summary>
        [DataMember(Name = "rabbit_mq_target_details", EmitDefaultValue = false)]
        public RabbitMQTargetDetails RabbitMqTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets SalesforceTargetDetails
        /// </summary>
        [DataMember(Name = "salesforce_target_details", EmitDefaultValue = false)]
        public SalesforceTargetDetails SalesforceTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets SshTargetDetails
        /// </summary>
        [DataMember(Name = "ssh_target_details", EmitDefaultValue = false)]
        public SSHTargetDetails SshTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets VenafiTargetDetails
        /// </summary>
        [DataMember(Name = "venafi_target_details", EmitDefaultValue = false)]
        public VenafiTargetDetails VenafiTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets WebTargetDetails
        /// </summary>
        [DataMember(Name = "web_target_details", EmitDefaultValue = false)]
        public WebTargetDetails WebTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets WindowsTargetDetails
        /// </summary>
        [DataMember(Name = "windows_target_details", EmitDefaultValue = false)]
        public WindowsTargetDetails WindowsTargetDetails { get; set; }

        /// <summary>
        /// Gets or Sets ZerosslTargetDetails
        /// </summary>
        [DataMember(Name = "zerossl_target_details", EmitDefaultValue = false)]
        public ZeroSSLTargetDetails ZerosslTargetDetails { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class TargetTypeDetailsInput {\n");
            sb.Append("  ArtifactoryTargetDetails: ").Append(ArtifactoryTargetDetails).Append("\n");
            sb.Append("  AwsTargetDetails: ").Append(AwsTargetDetails).Append("\n");
            sb.Append("  AzureTargetDetails: ").Append(AzureTargetDetails).Append("\n");
            sb.Append("  ChefTargetDetails: ").Append(ChefTargetDetails).Append("\n");
            sb.Append("  CustomTargetDetails: ").Append(CustomTargetDetails).Append("\n");
            sb.Append("  DbTargetDetails: ").Append(DbTargetDetails).Append("\n");
            sb.Append("  DockerhubTargetDetails: ").Append(DockerhubTargetDetails).Append("\n");
            sb.Append("  EksTargetDetails: ").Append(EksTargetDetails).Append("\n");
            sb.Append("  GcpTargetDetails: ").Append(GcpTargetDetails).Append("\n");
            sb.Append("  GithubTargetDetails: ").Append(GithubTargetDetails).Append("\n");
            sb.Append("  GitlabTargetDetails: ").Append(GitlabTargetDetails).Append("\n");
            sb.Append("  GkeTargetDetails: ").Append(GkeTargetDetails).Append("\n");
            sb.Append("  GlobalsignAtlasTargetDetails: ").Append(GlobalsignAtlasTargetDetails).Append("\n");
            sb.Append("  GlobalsignTargetDetails: ").Append(GlobalsignTargetDetails).Append("\n");
            sb.Append("  GodaddyTargetDetails: ").Append(GodaddyTargetDetails).Append("\n");
            sb.Append("  HashiVaultTargetDetails: ").Append(HashiVaultTargetDetails).Append("\n");
            sb.Append("  LdapTargetDetails: ").Append(LdapTargetDetails).Append("\n");
            sb.Append("  LinkedTargetDetails: ").Append(LinkedTargetDetails).Append("\n");
            sb.Append("  MongoDbTargetDetails: ").Append(MongoDbTargetDetails).Append("\n");
            sb.Append("  NativeK8sTargetDetails: ").Append(NativeK8sTargetDetails).Append("\n");
            sb.Append("  PingTargetDetails: ").Append(PingTargetDetails).Append("\n");
            sb.Append("  RabbitMqTargetDetails: ").Append(RabbitMqTargetDetails).Append("\n");
            sb.Append("  SalesforceTargetDetails: ").Append(SalesforceTargetDetails).Append("\n");
            sb.Append("  SshTargetDetails: ").Append(SshTargetDetails).Append("\n");
            sb.Append("  VenafiTargetDetails: ").Append(VenafiTargetDetails).Append("\n");
            sb.Append("  WebTargetDetails: ").Append(WebTargetDetails).Append("\n");
            sb.Append("  WindowsTargetDetails: ").Append(WindowsTargetDetails).Append("\n");
            sb.Append("  ZerosslTargetDetails: ").Append(ZerosslTargetDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TargetTypeDetailsInput);
        }

        /// <summary>
        /// Returns true if TargetTypeDetailsInput instances are equal
        /// </summary>
        /// <param name="input">Instance of TargetTypeDetailsInput to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TargetTypeDetailsInput input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ArtifactoryTargetDetails == input.ArtifactoryTargetDetails ||
                    (this.ArtifactoryTargetDetails != null &&
                    this.ArtifactoryTargetDetails.Equals(input.ArtifactoryTargetDetails))
                ) && 
                (
                    this.AwsTargetDetails == input.AwsTargetDetails ||
                    (this.AwsTargetDetails != null &&
                    this.AwsTargetDetails.Equals(input.AwsTargetDetails))
                ) && 
                (
                    this.AzureTargetDetails == input.AzureTargetDetails ||
                    (this.AzureTargetDetails != null &&
                    this.AzureTargetDetails.Equals(input.AzureTargetDetails))
                ) && 
                (
                    this.ChefTargetDetails == input.ChefTargetDetails ||
                    (this.ChefTargetDetails != null &&
                    this.ChefTargetDetails.Equals(input.ChefTargetDetails))
                ) && 
                (
                    this.CustomTargetDetails == input.CustomTargetDetails ||
                    (this.CustomTargetDetails != null &&
                    this.CustomTargetDetails.Equals(input.CustomTargetDetails))
                ) && 
                (
                    this.DbTargetDetails == input.DbTargetDetails ||
                    (this.DbTargetDetails != null &&
                    this.DbTargetDetails.Equals(input.DbTargetDetails))
                ) && 
                (
                    this.DockerhubTargetDetails == input.DockerhubTargetDetails ||
                    (this.DockerhubTargetDetails != null &&
                    this.DockerhubTargetDetails.Equals(input.DockerhubTargetDetails))
                ) && 
                (
                    this.EksTargetDetails == input.EksTargetDetails ||
                    (this.EksTargetDetails != null &&
                    this.EksTargetDetails.Equals(input.EksTargetDetails))
                ) && 
                (
                    this.GcpTargetDetails == input.GcpTargetDetails ||
                    (this.GcpTargetDetails != null &&
                    this.GcpTargetDetails.Equals(input.GcpTargetDetails))
                ) && 
                (
                    this.GithubTargetDetails == input.GithubTargetDetails ||
                    (this.GithubTargetDetails != null &&
                    this.GithubTargetDetails.Equals(input.GithubTargetDetails))
                ) && 
                (
                    this.GitlabTargetDetails == input.GitlabTargetDetails ||
                    (this.GitlabTargetDetails != null &&
                    this.GitlabTargetDetails.Equals(input.GitlabTargetDetails))
                ) && 
                (
                    this.GkeTargetDetails == input.GkeTargetDetails ||
                    (this.GkeTargetDetails != null &&
                    this.GkeTargetDetails.Equals(input.GkeTargetDetails))
                ) && 
                (
                    this.GlobalsignAtlasTargetDetails == input.GlobalsignAtlasTargetDetails ||
                    (this.GlobalsignAtlasTargetDetails != null &&
                    this.GlobalsignAtlasTargetDetails.Equals(input.GlobalsignAtlasTargetDetails))
                ) && 
                (
                    this.GlobalsignTargetDetails == input.GlobalsignTargetDetails ||
                    (this.GlobalsignTargetDetails != null &&
                    this.GlobalsignTargetDetails.Equals(input.GlobalsignTargetDetails))
                ) && 
                (
                    this.GodaddyTargetDetails == input.GodaddyTargetDetails ||
                    (this.GodaddyTargetDetails != null &&
                    this.GodaddyTargetDetails.Equals(input.GodaddyTargetDetails))
                ) && 
                (
                    this.HashiVaultTargetDetails == input.HashiVaultTargetDetails ||
                    (this.HashiVaultTargetDetails != null &&
                    this.HashiVaultTargetDetails.Equals(input.HashiVaultTargetDetails))
                ) && 
                (
                    this.LdapTargetDetails == input.LdapTargetDetails ||
                    (this.LdapTargetDetails != null &&
                    this.LdapTargetDetails.Equals(input.LdapTargetDetails))
                ) && 
                (
                    this.LinkedTargetDetails == input.LinkedTargetDetails ||
                    (this.LinkedTargetDetails != null &&
                    this.LinkedTargetDetails.Equals(input.LinkedTargetDetails))
                ) && 
                (
                    this.MongoDbTargetDetails == input.MongoDbTargetDetails ||
                    (this.MongoDbTargetDetails != null &&
                    this.MongoDbTargetDetails.Equals(input.MongoDbTargetDetails))
                ) && 
                (
                    this.NativeK8sTargetDetails == input.NativeK8sTargetDetails ||
                    (this.NativeK8sTargetDetails != null &&
                    this.NativeK8sTargetDetails.Equals(input.NativeK8sTargetDetails))
                ) && 
                (
                    this.PingTargetDetails == input.PingTargetDetails ||
                    (this.PingTargetDetails != null &&
                    this.PingTargetDetails.Equals(input.PingTargetDetails))
                ) && 
                (
                    this.RabbitMqTargetDetails == input.RabbitMqTargetDetails ||
                    (this.RabbitMqTargetDetails != null &&
                    this.RabbitMqTargetDetails.Equals(input.RabbitMqTargetDetails))
                ) && 
                (
                    this.SalesforceTargetDetails == input.SalesforceTargetDetails ||
                    (this.SalesforceTargetDetails != null &&
                    this.SalesforceTargetDetails.Equals(input.SalesforceTargetDetails))
                ) && 
                (
                    this.SshTargetDetails == input.SshTargetDetails ||
                    (this.SshTargetDetails != null &&
                    this.SshTargetDetails.Equals(input.SshTargetDetails))
                ) && 
                (
                    this.VenafiTargetDetails == input.VenafiTargetDetails ||
                    (this.VenafiTargetDetails != null &&
                    this.VenafiTargetDetails.Equals(input.VenafiTargetDetails))
                ) && 
                (
                    this.WebTargetDetails == input.WebTargetDetails ||
                    (this.WebTargetDetails != null &&
                    this.WebTargetDetails.Equals(input.WebTargetDetails))
                ) && 
                (
                    this.WindowsTargetDetails == input.WindowsTargetDetails ||
                    (this.WindowsTargetDetails != null &&
                    this.WindowsTargetDetails.Equals(input.WindowsTargetDetails))
                ) && 
                (
                    this.ZerosslTargetDetails == input.ZerosslTargetDetails ||
                    (this.ZerosslTargetDetails != null &&
                    this.ZerosslTargetDetails.Equals(input.ZerosslTargetDetails))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ArtifactoryTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.ArtifactoryTargetDetails.GetHashCode();
                }
                if (this.AwsTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.AwsTargetDetails.GetHashCode();
                }
                if (this.AzureTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.AzureTargetDetails.GetHashCode();
                }
                if (this.ChefTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.ChefTargetDetails.GetHashCode();
                }
                if (this.CustomTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.CustomTargetDetails.GetHashCode();
                }
                if (this.DbTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.DbTargetDetails.GetHashCode();
                }
                if (this.DockerhubTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.DockerhubTargetDetails.GetHashCode();
                }
                if (this.EksTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.EksTargetDetails.GetHashCode();
                }
                if (this.GcpTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.GcpTargetDetails.GetHashCode();
                }
                if (this.GithubTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.GithubTargetDetails.GetHashCode();
                }
                if (this.GitlabTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.GitlabTargetDetails.GetHashCode();
                }
                if (this.GkeTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.GkeTargetDetails.GetHashCode();
                }
                if (this.GlobalsignAtlasTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.GlobalsignAtlasTargetDetails.GetHashCode();
                }
                if (this.GlobalsignTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.GlobalsignTargetDetails.GetHashCode();
                }
                if (this.GodaddyTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.GodaddyTargetDetails.GetHashCode();
                }
                if (this.HashiVaultTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.HashiVaultTargetDetails.GetHashCode();
                }
                if (this.LdapTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.LdapTargetDetails.GetHashCode();
                }
                if (this.LinkedTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.LinkedTargetDetails.GetHashCode();
                }
                if (this.MongoDbTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.MongoDbTargetDetails.GetHashCode();
                }
                if (this.NativeK8sTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.NativeK8sTargetDetails.GetHashCode();
                }
                if (this.PingTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.PingTargetDetails.GetHashCode();
                }
                if (this.RabbitMqTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.RabbitMqTargetDetails.GetHashCode();
                }
                if (this.SalesforceTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.SalesforceTargetDetails.GetHashCode();
                }
                if (this.SshTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.SshTargetDetails.GetHashCode();
                }
                if (this.VenafiTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.VenafiTargetDetails.GetHashCode();
                }
                if (this.WebTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.WebTargetDetails.GetHashCode();
                }
                if (this.WindowsTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.WindowsTargetDetails.GetHashCode();
                }
                if (this.ZerosslTargetDetails != null)
                {
                    hashCode = (hashCode * 59) + this.ZerosslTargetDetails.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
