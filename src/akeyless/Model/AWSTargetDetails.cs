/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// AWSTargetDetails
    /// </summary>
    [DataContract(Name = "AWSTargetDetails")]
    public partial class AWSTargetDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AWSTargetDetails" /> class.
        /// </summary>
        /// <param name="awsAccessKeyId">awsAccessKeyId.</param>
        /// <param name="awsRegion">awsRegion.</param>
        /// <param name="awsSecretAccessKey">awsSecretAccessKey.</param>
        /// <param name="awsSessionToken">awsSessionToken.</param>
        /// <param name="gwCloudIdentityExternalIdOpt">gwCloudIdentityExternalIdOpt.</param>
        /// <param name="useGwCloudIdentity">useGwCloudIdentity.</param>
        public AWSTargetDetails(string awsAccessKeyId = default(string), string awsRegion = default(string), string awsSecretAccessKey = default(string), string awsSessionToken = default(string), AWSGatewayCloudIdentityExternalIdOpt gwCloudIdentityExternalIdOpt = default(AWSGatewayCloudIdentityExternalIdOpt), bool useGwCloudIdentity = default(bool))
        {
            this.AwsAccessKeyId = awsAccessKeyId;
            this.AwsRegion = awsRegion;
            this.AwsSecretAccessKey = awsSecretAccessKey;
            this.AwsSessionToken = awsSessionToken;
            this.GwCloudIdentityExternalIdOpt = gwCloudIdentityExternalIdOpt;
            this.UseGwCloudIdentity = useGwCloudIdentity;
        }

        /// <summary>
        /// Gets or Sets AwsAccessKeyId
        /// </summary>
        [DataMember(Name = "aws_access_key_id", EmitDefaultValue = false)]
        public string AwsAccessKeyId { get; set; }

        /// <summary>
        /// Gets or Sets AwsRegion
        /// </summary>
        [DataMember(Name = "aws_region", EmitDefaultValue = false)]
        public string AwsRegion { get; set; }

        /// <summary>
        /// Gets or Sets AwsSecretAccessKey
        /// </summary>
        [DataMember(Name = "aws_secret_access_key", EmitDefaultValue = false)]
        public string AwsSecretAccessKey { get; set; }

        /// <summary>
        /// Gets or Sets AwsSessionToken
        /// </summary>
        [DataMember(Name = "aws_session_token", EmitDefaultValue = false)]
        public string AwsSessionToken { get; set; }

        /// <summary>
        /// Gets or Sets GwCloudIdentityExternalIdOpt
        /// </summary>
        [DataMember(Name = "gw_cloud_identity_external_id_opt", EmitDefaultValue = false)]
        public AWSGatewayCloudIdentityExternalIdOpt GwCloudIdentityExternalIdOpt { get; set; }

        /// <summary>
        /// Gets or Sets UseGwCloudIdentity
        /// </summary>
        [DataMember(Name = "use_gw_cloud_identity", EmitDefaultValue = true)]
        public bool UseGwCloudIdentity { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AWSTargetDetails {\n");
            sb.Append("  AwsAccessKeyId: ").Append(AwsAccessKeyId).Append("\n");
            sb.Append("  AwsRegion: ").Append(AwsRegion).Append("\n");
            sb.Append("  AwsSecretAccessKey: ").Append(AwsSecretAccessKey).Append("\n");
            sb.Append("  AwsSessionToken: ").Append(AwsSessionToken).Append("\n");
            sb.Append("  GwCloudIdentityExternalIdOpt: ").Append(GwCloudIdentityExternalIdOpt).Append("\n");
            sb.Append("  UseGwCloudIdentity: ").Append(UseGwCloudIdentity).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
