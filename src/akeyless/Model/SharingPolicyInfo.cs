/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// SharingPolicyInfo
    /// </summary>
    [DataContract(Name = "SharingPolicyInfo")]
    public partial class SharingPolicyInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SharingPolicyInfo" /> class.
        /// </summary>
        /// <param name="allowedEmailDomains">AllowedEmailDomains limits email sharing to these domains. By default all domains are allowed..</param>
        /// <param name="defaultShareLinkTtl">defaultShareLinkTtl.</param>
        /// <param name="enable">enable.</param>
        public SharingPolicyInfo(List<string> allowedEmailDomains = default(List<string>), long defaultShareLinkTtl = default(long), bool enable = default(bool))
        {
            this.AllowedEmailDomains = allowedEmailDomains;
            this.DefaultShareLinkTtl = defaultShareLinkTtl;
            this.Enable = enable;
        }

        /// <summary>
        /// AllowedEmailDomains limits email sharing to these domains. By default all domains are allowed.
        /// </summary>
        /// <value>AllowedEmailDomains limits email sharing to these domains. By default all domains are allowed.</value>
        [DataMember(Name = "allowed_email_domains", EmitDefaultValue = false)]
        public List<string> AllowedEmailDomains { get; set; }

        /// <summary>
        /// Gets or Sets DefaultShareLinkTtl
        /// </summary>
        [DataMember(Name = "default_share_link_ttl", EmitDefaultValue = false)]
        public long DefaultShareLinkTtl { get; set; }

        /// <summary>
        /// Gets or Sets Enable
        /// </summary>
        [DataMember(Name = "enable", EmitDefaultValue = true)]
        public bool Enable { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SharingPolicyInfo {\n");
            sb.Append("  AllowedEmailDomains: ").Append(AllowedEmailDomains).Append("\n");
            sb.Append("  DefaultShareLinkTtl: ").Append(DefaultShareLinkTtl).Append("\n");
            sb.Append("  Enable: ").Append(Enable).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
