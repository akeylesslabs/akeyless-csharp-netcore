/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// gatewayUpdateRemoteAccessRdpRecordings is a command that update remote access rdp recording config
    /// </summary>
    [DataContract(Name = "gatewayUpdateRemoteAccessRdpRecordings")]
    public partial class GatewayUpdateRemoteAccessRdpRecordings : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GatewayUpdateRemoteAccessRdpRecordings" /> class.
        /// </summary>
        /// <param name="awsStorageAccessKeyId">AWS access key id. For more information refer to https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html.</param>
        /// <param name="awsStorageBucketName">The AWS bucket name. For more information refer to https://docs.aws.amazon.com/s3/.</param>
        /// <param name="awsStorageBucketPrefix">The folder name in S3 bucket. For more information refer to https://docs.aws.amazon.com/s3/.</param>
        /// <param name="awsStorageRegion">The region where the storage is located.</param>
        /// <param name="awsStorageSecretAccessKey">AWS secret access key. For more information refer to https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html.</param>
        /// <param name="azureStorageAccountName">Azure account name. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-overview.</param>
        /// <param name="azureStorageClientId">Azure client id. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-get-info?tabs&#x3D;portal.</param>
        /// <param name="azureStorageClientSecret">Azure client secret. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-get-info?tabs&#x3D;portal.</param>
        /// <param name="azureStorageContainerName">Azure container name. For more information refer to https://learn.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers- -blobs- -and-metadata.</param>
        /// <param name="azureStorageTenantId">Azure tenant id. For more information refer to https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant.</param>
        /// <param name="json">Set output format to JSON (default to false).</param>
        /// <param name="rdpSessionRecording">Enable recording of rdp session [true/false].</param>
        /// <param name="rdpSessionRecordingCompress">Whether to compress recording files before upload.</param>
        /// <param name="rdpSessionRecordingEncryptionKey">If provided, this key will be used to encrypt uploaded recordings..</param>
        /// <param name="rdpSessionRecordingQuality">RDP session recording quality [low/medium/high].</param>
        /// <param name="rdpSessionStorage">Rdp session recording storage destination [local/aws/azure].</param>
        /// <param name="token">Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;).</param>
        /// <param name="uidToken">The universal identity token, Required only for universal_identity authentication.</param>
        public GatewayUpdateRemoteAccessRdpRecordings(string awsStorageAccessKeyId = default(string), string awsStorageBucketName = default(string), string awsStorageBucketPrefix = default(string), string awsStorageRegion = default(string), string awsStorageSecretAccessKey = default(string), string azureStorageAccountName = default(string), string azureStorageClientId = default(string), string azureStorageClientSecret = default(string), string azureStorageContainerName = default(string), string azureStorageTenantId = default(string), bool json = false, string rdpSessionRecording = default(string), bool rdpSessionRecordingCompress = default(bool), string rdpSessionRecordingEncryptionKey = default(string), string rdpSessionRecordingQuality = default(string), string rdpSessionStorage = default(string), string token = default(string), string uidToken = default(string))
        {
            this.AwsStorageAccessKeyId = awsStorageAccessKeyId;
            this.AwsStorageBucketName = awsStorageBucketName;
            this.AwsStorageBucketPrefix = awsStorageBucketPrefix;
            this.AwsStorageRegion = awsStorageRegion;
            this.AwsStorageSecretAccessKey = awsStorageSecretAccessKey;
            this.AzureStorageAccountName = azureStorageAccountName;
            this.AzureStorageClientId = azureStorageClientId;
            this.AzureStorageClientSecret = azureStorageClientSecret;
            this.AzureStorageContainerName = azureStorageContainerName;
            this.AzureStorageTenantId = azureStorageTenantId;
            this.Json = json;
            this.RdpSessionRecording = rdpSessionRecording;
            this.RdpSessionRecordingCompress = rdpSessionRecordingCompress;
            this.RdpSessionRecordingEncryptionKey = rdpSessionRecordingEncryptionKey;
            this.RdpSessionRecordingQuality = rdpSessionRecordingQuality;
            this.RdpSessionStorage = rdpSessionStorage;
            this.Token = token;
            this.UidToken = uidToken;
        }

        /// <summary>
        /// AWS access key id. For more information refer to https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html
        /// </summary>
        /// <value>AWS access key id. For more information refer to https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html</value>
        [DataMember(Name = "aws-storage-access-key-id", EmitDefaultValue = false)]
        public string AwsStorageAccessKeyId { get; set; }

        /// <summary>
        /// The AWS bucket name. For more information refer to https://docs.aws.amazon.com/s3/
        /// </summary>
        /// <value>The AWS bucket name. For more information refer to https://docs.aws.amazon.com/s3/</value>
        [DataMember(Name = "aws-storage-bucket-name", EmitDefaultValue = false)]
        public string AwsStorageBucketName { get; set; }

        /// <summary>
        /// The folder name in S3 bucket. For more information refer to https://docs.aws.amazon.com/s3/
        /// </summary>
        /// <value>The folder name in S3 bucket. For more information refer to https://docs.aws.amazon.com/s3/</value>
        [DataMember(Name = "aws-storage-bucket-prefix", EmitDefaultValue = false)]
        public string AwsStorageBucketPrefix { get; set; }

        /// <summary>
        /// The region where the storage is located
        /// </summary>
        /// <value>The region where the storage is located</value>
        [DataMember(Name = "aws-storage-region", EmitDefaultValue = false)]
        public string AwsStorageRegion { get; set; }

        /// <summary>
        /// AWS secret access key. For more information refer to https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html
        /// </summary>
        /// <value>AWS secret access key. For more information refer to https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html</value>
        [DataMember(Name = "aws-storage-secret-access-key", EmitDefaultValue = false)]
        public string AwsStorageSecretAccessKey { get; set; }

        /// <summary>
        /// Azure account name. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-overview
        /// </summary>
        /// <value>Azure account name. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-overview</value>
        [DataMember(Name = "azure-storage-account-name", EmitDefaultValue = false)]
        public string AzureStorageAccountName { get; set; }

        /// <summary>
        /// Azure client id. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-get-info?tabs&#x3D;portal
        /// </summary>
        /// <value>Azure client id. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-get-info?tabs&#x3D;portal</value>
        [DataMember(Name = "azure-storage-client-id", EmitDefaultValue = false)]
        public string AzureStorageClientId { get; set; }

        /// <summary>
        /// Azure client secret. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-get-info?tabs&#x3D;portal
        /// </summary>
        /// <value>Azure client secret. For more information refer to https://learn.microsoft.com/en-us/azure/storage/common/storage-account-get-info?tabs&#x3D;portal</value>
        [DataMember(Name = "azure-storage-client-secret", EmitDefaultValue = false)]
        public string AzureStorageClientSecret { get; set; }

        /// <summary>
        /// Azure container name. For more information refer to https://learn.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers- -blobs- -and-metadata
        /// </summary>
        /// <value>Azure container name. For more information refer to https://learn.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers- -blobs- -and-metadata</value>
        [DataMember(Name = "azure-storage-container-name", EmitDefaultValue = false)]
        public string AzureStorageContainerName { get; set; }

        /// <summary>
        /// Azure tenant id. For more information refer to https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant
        /// </summary>
        /// <value>Azure tenant id. For more information refer to https://learn.microsoft.com/en-us/entra/fundamentals/how-to-find-tenant</value>
        [DataMember(Name = "azure-storage-tenant-id", EmitDefaultValue = false)]
        public string AzureStorageTenantId { get; set; }

        /// <summary>
        /// Set output format to JSON
        /// </summary>
        /// <value>Set output format to JSON</value>
        [DataMember(Name = "json", EmitDefaultValue = true)]
        public bool Json { get; set; }

        /// <summary>
        /// Enable recording of rdp session [true/false]
        /// </summary>
        /// <value>Enable recording of rdp session [true/false]</value>
        [DataMember(Name = "rdp-session-recording", EmitDefaultValue = false)]
        public string RdpSessionRecording { get; set; }

        /// <summary>
        /// Whether to compress recording files before upload
        /// </summary>
        /// <value>Whether to compress recording files before upload</value>
        [DataMember(Name = "rdp-session-recording-compress", EmitDefaultValue = true)]
        public bool RdpSessionRecordingCompress { get; set; }

        /// <summary>
        /// If provided, this key will be used to encrypt uploaded recordings.
        /// </summary>
        /// <value>If provided, this key will be used to encrypt uploaded recordings.</value>
        [DataMember(Name = "rdp-session-recording-encryption-key", EmitDefaultValue = false)]
        public string RdpSessionRecordingEncryptionKey { get; set; }

        /// <summary>
        /// RDP session recording quality [low/medium/high]
        /// </summary>
        /// <value>RDP session recording quality [low/medium/high]</value>
        [DataMember(Name = "rdp-session-recording-quality", EmitDefaultValue = false)]
        public string RdpSessionRecordingQuality { get; set; }

        /// <summary>
        /// Rdp session recording storage destination [local/aws/azure]
        /// </summary>
        /// <value>Rdp session recording storage destination [local/aws/azure]</value>
        [DataMember(Name = "rdp-session-storage", EmitDefaultValue = false)]
        public string RdpSessionStorage { get; set; }

        /// <summary>
        /// Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)
        /// </summary>
        /// <value>Authentication token (see &#x60;/auth&#x60; and &#x60;/configure&#x60;)</value>
        [DataMember(Name = "token", EmitDefaultValue = false)]
        public string Token { get; set; }

        /// <summary>
        /// The universal identity token, Required only for universal_identity authentication
        /// </summary>
        /// <value>The universal identity token, Required only for universal_identity authentication</value>
        [DataMember(Name = "uid-token", EmitDefaultValue = false)]
        public string UidToken { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GatewayUpdateRemoteAccessRdpRecordings {\n");
            sb.Append("  AwsStorageAccessKeyId: ").Append(AwsStorageAccessKeyId).Append("\n");
            sb.Append("  AwsStorageBucketName: ").Append(AwsStorageBucketName).Append("\n");
            sb.Append("  AwsStorageBucketPrefix: ").Append(AwsStorageBucketPrefix).Append("\n");
            sb.Append("  AwsStorageRegion: ").Append(AwsStorageRegion).Append("\n");
            sb.Append("  AwsStorageSecretAccessKey: ").Append(AwsStorageSecretAccessKey).Append("\n");
            sb.Append("  AzureStorageAccountName: ").Append(AzureStorageAccountName).Append("\n");
            sb.Append("  AzureStorageClientId: ").Append(AzureStorageClientId).Append("\n");
            sb.Append("  AzureStorageClientSecret: ").Append(AzureStorageClientSecret).Append("\n");
            sb.Append("  AzureStorageContainerName: ").Append(AzureStorageContainerName).Append("\n");
            sb.Append("  AzureStorageTenantId: ").Append(AzureStorageTenantId).Append("\n");
            sb.Append("  Json: ").Append(Json).Append("\n");
            sb.Append("  RdpSessionRecording: ").Append(RdpSessionRecording).Append("\n");
            sb.Append("  RdpSessionRecordingCompress: ").Append(RdpSessionRecordingCompress).Append("\n");
            sb.Append("  RdpSessionRecordingEncryptionKey: ").Append(RdpSessionRecordingEncryptionKey).Append("\n");
            sb.Append("  RdpSessionRecordingQuality: ").Append(RdpSessionRecordingQuality).Append("\n");
            sb.Append("  RdpSessionStorage: ").Append(RdpSessionStorage).Append("\n");
            sb.Append("  Token: ").Append(Token).Append("\n");
            sb.Append("  UidToken: ").Append(UidToken).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
