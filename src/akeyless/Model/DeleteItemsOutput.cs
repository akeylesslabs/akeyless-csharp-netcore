/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// DeleteItemsOutput
    /// </summary>
    [DataContract(Name = "deleteItemsOutput")]
    public partial class DeleteItemsOutput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeleteItemsOutput" /> class.
        /// </summary>
        /// <param name="deletedItems">deletedItems.</param>
        /// <param name="failedDeletedItems">failedDeletedItems.</param>
        /// <param name="path">path.</param>
        public DeleteItemsOutput(List<string> deletedItems = default(List<string>), Dictionary<string, string> failedDeletedItems = default(Dictionary<string, string>), string path = default(string))
        {
            this.DeletedItems = deletedItems;
            this.FailedDeletedItems = failedDeletedItems;
            this.Path = path;
        }

        /// <summary>
        /// Gets or Sets DeletedItems
        /// </summary>
        [DataMember(Name = "deleted_items", EmitDefaultValue = false)]
        public List<string> DeletedItems { get; set; }

        /// <summary>
        /// Gets or Sets FailedDeletedItems
        /// </summary>
        [DataMember(Name = "failed_deleted_items", EmitDefaultValue = false)]
        public Dictionary<string, string> FailedDeletedItems { get; set; }

        /// <summary>
        /// Gets or Sets Path
        /// </summary>
        [DataMember(Name = "path", EmitDefaultValue = false)]
        public string Path { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class DeleteItemsOutput {\n");
            sb.Append("  DeletedItems: ").Append(DeletedItems).Append("\n");
            sb.Append("  FailedDeletedItems: ").Append(FailedDeletedItems).Append("\n");
            sb.Append("  Path: ").Append(Path).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
