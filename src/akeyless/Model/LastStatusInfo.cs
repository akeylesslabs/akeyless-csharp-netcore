/* 
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// LastStatusInfo
    /// </summary>
    [DataContract]
    public partial class LastStatusInfo :  IEquatable<LastStatusInfo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LastStatusInfo" /> class.
        /// </summary>
        /// <param name="migrationsStatus">migrationsStatus.</param>
        /// <param name="producersErrors">producersErrors.</param>
        public LastStatusInfo(MigrationStatus migrationsStatus = default(MigrationStatus), Object producersErrors = default(Object))
        {
            this.MigrationsStatus = migrationsStatus;
            this.ProducersErrors = producersErrors;
        }
        
        /// <summary>
        /// Gets or Sets MigrationsStatus
        /// </summary>
        [DataMember(Name="migrations_status", EmitDefaultValue=false)]
        public MigrationStatus MigrationsStatus { get; set; }

        /// <summary>
        /// Gets or Sets ProducersErrors
        /// </summary>
        [DataMember(Name="producers_errors", EmitDefaultValue=false)]
        public Object ProducersErrors { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class LastStatusInfo {\n");
            sb.Append("  MigrationsStatus: ").Append(MigrationsStatus).Append("\n");
            sb.Append("  ProducersErrors: ").Append(ProducersErrors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LastStatusInfo);
        }

        /// <summary>
        /// Returns true if LastStatusInfo instances are equal
        /// </summary>
        /// <param name="input">Instance of LastStatusInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LastStatusInfo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.MigrationsStatus == input.MigrationsStatus ||
                    (this.MigrationsStatus != null &&
                    this.MigrationsStatus.Equals(input.MigrationsStatus))
                ) && 
                (
                    this.ProducersErrors == input.ProducersErrors ||
                    (this.ProducersErrors != null &&
                    this.ProducersErrors.Equals(input.ProducersErrors))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.MigrationsStatus != null)
                    hashCode = hashCode * 59 + this.MigrationsStatus.GetHashCode();
                if (this.ProducersErrors != null)
                    hashCode = hashCode * 59 + this.ProducersErrors.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
