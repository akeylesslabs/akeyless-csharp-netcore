/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// SumologicLogForwardingConfig
    /// </summary>
    [DataContract(Name = "SumologicLogForwardingConfig")]
    public partial class SumologicLogForwardingConfig : IEquatable<SumologicLogForwardingConfig>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SumologicLogForwardingConfig" /> class.
        /// </summary>
        /// <param name="sumoLogicEndpoint">sumoLogicEndpoint.</param>
        /// <param name="sumoLogicHost">sumoLogicHost.</param>
        /// <param name="sumoLogicTags">sumoLogicTags.</param>
        public SumologicLogForwardingConfig(string sumoLogicEndpoint = default(string), string sumoLogicHost = default(string), string sumoLogicTags = default(string))
        {
            this.SumoLogicEndpoint = sumoLogicEndpoint;
            this.SumoLogicHost = sumoLogicHost;
            this.SumoLogicTags = sumoLogicTags;
        }

        /// <summary>
        /// Gets or Sets SumoLogicEndpoint
        /// </summary>
        [DataMember(Name = "sumo_logic_endpoint", EmitDefaultValue = false)]
        public string SumoLogicEndpoint { get; set; }

        /// <summary>
        /// Gets or Sets SumoLogicHost
        /// </summary>
        [DataMember(Name = "sumo_logic_host", EmitDefaultValue = false)]
        public string SumoLogicHost { get; set; }

        /// <summary>
        /// Gets or Sets SumoLogicTags
        /// </summary>
        [DataMember(Name = "sumo_logic_tags", EmitDefaultValue = false)]
        public string SumoLogicTags { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SumologicLogForwardingConfig {\n");
            sb.Append("  SumoLogicEndpoint: ").Append(SumoLogicEndpoint).Append("\n");
            sb.Append("  SumoLogicHost: ").Append(SumoLogicHost).Append("\n");
            sb.Append("  SumoLogicTags: ").Append(SumoLogicTags).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SumologicLogForwardingConfig);
        }

        /// <summary>
        /// Returns true if SumologicLogForwardingConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of SumologicLogForwardingConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SumologicLogForwardingConfig input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.SumoLogicEndpoint == input.SumoLogicEndpoint ||
                    (this.SumoLogicEndpoint != null &&
                    this.SumoLogicEndpoint.Equals(input.SumoLogicEndpoint))
                ) && 
                (
                    this.SumoLogicHost == input.SumoLogicHost ||
                    (this.SumoLogicHost != null &&
                    this.SumoLogicHost.Equals(input.SumoLogicHost))
                ) && 
                (
                    this.SumoLogicTags == input.SumoLogicTags ||
                    (this.SumoLogicTags != null &&
                    this.SumoLogicTags.Equals(input.SumoLogicTags))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SumoLogicEndpoint != null)
                {
                    hashCode = (hashCode * 59) + this.SumoLogicEndpoint.GetHashCode();
                }
                if (this.SumoLogicHost != null)
                {
                    hashCode = (hashCode * 59) + this.SumoLogicHost.GetHashCode();
                }
                if (this.SumoLogicTags != null)
                {
                    hashCode = (hashCode * 59) + this.SumoLogicTags.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
