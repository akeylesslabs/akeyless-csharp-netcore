/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// GoogleChronicleForwardingConfig
    /// </summary>
    [DataContract(Name = "GoogleChronicleForwardingConfig")]
    public partial class GoogleChronicleForwardingConfig : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GoogleChronicleForwardingConfig" /> class.
        /// </summary>
        /// <param name="customerId">customerId.</param>
        /// <param name="logType">logType.</param>
        /// <param name="region">region.</param>
        /// <param name="serviceAccountKey">serviceAccountKey.</param>
        public GoogleChronicleForwardingConfig(string customerId = default(string), string logType = default(string), string region = default(string), string serviceAccountKey = default(string))
        {
            this.CustomerId = customerId;
            this.LogType = logType;
            this.Region = region;
            this.ServiceAccountKey = serviceAccountKey;
        }

        /// <summary>
        /// Gets or Sets CustomerId
        /// </summary>
        [DataMember(Name = "customer_id", EmitDefaultValue = false)]
        public string CustomerId { get; set; }

        /// <summary>
        /// Gets or Sets LogType
        /// </summary>
        [DataMember(Name = "log_type", EmitDefaultValue = false)]
        public string LogType { get; set; }

        /// <summary>
        /// Gets or Sets Region
        /// </summary>
        [DataMember(Name = "region", EmitDefaultValue = false)]
        public string Region { get; set; }

        /// <summary>
        /// Gets or Sets ServiceAccountKey
        /// </summary>
        [DataMember(Name = "service_account_key", EmitDefaultValue = false)]
        public string ServiceAccountKey { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GoogleChronicleForwardingConfig {\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  LogType: ").Append(LogType).Append("\n");
            sb.Append("  Region: ").Append(Region).Append("\n");
            sb.Append("  ServiceAccountKey: ").Append(ServiceAccountKey).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
