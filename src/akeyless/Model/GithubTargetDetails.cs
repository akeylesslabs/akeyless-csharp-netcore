/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// GithubTargetDetails
    /// </summary>
    [DataContract(Name = "GithubTargetDetails")]
    public partial class GithubTargetDetails : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GithubTargetDetails" /> class.
        /// </summary>
        /// <param name="githubAppId">githubAppId.</param>
        /// <param name="githubAppPrivateKey">githubAppPrivateKey.</param>
        /// <param name="githubBaseUrl">githubBaseUrl.</param>
        public GithubTargetDetails(long githubAppId = default(long), string githubAppPrivateKey = default(string), string githubBaseUrl = default(string))
        {
            this.GithubAppId = githubAppId;
            this.GithubAppPrivateKey = githubAppPrivateKey;
            this.GithubBaseUrl = githubBaseUrl;
        }

        /// <summary>
        /// Gets or Sets GithubAppId
        /// </summary>
        [DataMember(Name = "github_app_id", EmitDefaultValue = false)]
        public long GithubAppId { get; set; }

        /// <summary>
        /// Gets or Sets GithubAppPrivateKey
        /// </summary>
        [DataMember(Name = "github_app_private_key", EmitDefaultValue = false)]
        public string GithubAppPrivateKey { get; set; }

        /// <summary>
        /// Gets or Sets GithubBaseUrl
        /// </summary>
        [DataMember(Name = "github_base_url", EmitDefaultValue = false)]
        public string GithubBaseUrl { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GithubTargetDetails {\n");
            sb.Append("  GithubAppId: ").Append(GithubAppId).Append("\n");
            sb.Append("  GithubAppPrivateKey: ").Append(GithubAppPrivateKey).Append("\n");
            sb.Append("  GithubBaseUrl: ").Append(GithubBaseUrl).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
