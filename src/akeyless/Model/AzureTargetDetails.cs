/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// AzureTargetDetails
    /// </summary>
    [DataContract(Name = "AzureTargetDetails")]
    public partial class AzureTargetDetails : IEquatable<AzureTargetDetails>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AzureTargetDetails" /> class.
        /// </summary>
        /// <param name="azureClientId">azureClientId.</param>
        /// <param name="azureClientSecret">azureClientSecret.</param>
        /// <param name="azureResourceGroupName">azureResourceGroupName.</param>
        /// <param name="azureResourceName">azureResourceName.</param>
        /// <param name="azureSubscriptionId">azureSubscriptionId.</param>
        /// <param name="azureTenantId">azureTenantId.</param>
        /// <param name="azureUsername">azureUsername.</param>
        /// <param name="useGwCloudIdentity">useGwCloudIdentity.</param>
        public AzureTargetDetails(string azureClientId = default(string), string azureClientSecret = default(string), string azureResourceGroupName = default(string), string azureResourceName = default(string), string azureSubscriptionId = default(string), string azureTenantId = default(string), string azureUsername = default(string), bool useGwCloudIdentity = default(bool))
        {
            this.AzureClientId = azureClientId;
            this.AzureClientSecret = azureClientSecret;
            this.AzureResourceGroupName = azureResourceGroupName;
            this.AzureResourceName = azureResourceName;
            this.AzureSubscriptionId = azureSubscriptionId;
            this.AzureTenantId = azureTenantId;
            this.AzureUsername = azureUsername;
            this.UseGwCloudIdentity = useGwCloudIdentity;
        }

        /// <summary>
        /// Gets or Sets AzureClientId
        /// </summary>
        [DataMember(Name = "azure_client_id", EmitDefaultValue = false)]
        public string AzureClientId { get; set; }

        /// <summary>
        /// Gets or Sets AzureClientSecret
        /// </summary>
        [DataMember(Name = "azure_client_secret", EmitDefaultValue = false)]
        public string AzureClientSecret { get; set; }

        /// <summary>
        /// Gets or Sets AzureResourceGroupName
        /// </summary>
        [DataMember(Name = "azure_resource_group_name", EmitDefaultValue = false)]
        public string AzureResourceGroupName { get; set; }

        /// <summary>
        /// Gets or Sets AzureResourceName
        /// </summary>
        [DataMember(Name = "azure_resource_name", EmitDefaultValue = false)]
        public string AzureResourceName { get; set; }

        /// <summary>
        /// Gets or Sets AzureSubscriptionId
        /// </summary>
        [DataMember(Name = "azure_subscription_id", EmitDefaultValue = false)]
        public string AzureSubscriptionId { get; set; }

        /// <summary>
        /// Gets or Sets AzureTenantId
        /// </summary>
        [DataMember(Name = "azure_tenant_id", EmitDefaultValue = false)]
        public string AzureTenantId { get; set; }

        /// <summary>
        /// Gets or Sets AzureUsername
        /// </summary>
        [DataMember(Name = "azure_username", EmitDefaultValue = false)]
        public string AzureUsername { get; set; }

        /// <summary>
        /// Gets or Sets UseGwCloudIdentity
        /// </summary>
        [DataMember(Name = "use_gw_cloud_identity", EmitDefaultValue = true)]
        public bool UseGwCloudIdentity { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AzureTargetDetails {\n");
            sb.Append("  AzureClientId: ").Append(AzureClientId).Append("\n");
            sb.Append("  AzureClientSecret: ").Append(AzureClientSecret).Append("\n");
            sb.Append("  AzureResourceGroupName: ").Append(AzureResourceGroupName).Append("\n");
            sb.Append("  AzureResourceName: ").Append(AzureResourceName).Append("\n");
            sb.Append("  AzureSubscriptionId: ").Append(AzureSubscriptionId).Append("\n");
            sb.Append("  AzureTenantId: ").Append(AzureTenantId).Append("\n");
            sb.Append("  AzureUsername: ").Append(AzureUsername).Append("\n");
            sb.Append("  UseGwCloudIdentity: ").Append(UseGwCloudIdentity).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AzureTargetDetails);
        }

        /// <summary>
        /// Returns true if AzureTargetDetails instances are equal
        /// </summary>
        /// <param name="input">Instance of AzureTargetDetails to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AzureTargetDetails input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AzureClientId == input.AzureClientId ||
                    (this.AzureClientId != null &&
                    this.AzureClientId.Equals(input.AzureClientId))
                ) && 
                (
                    this.AzureClientSecret == input.AzureClientSecret ||
                    (this.AzureClientSecret != null &&
                    this.AzureClientSecret.Equals(input.AzureClientSecret))
                ) && 
                (
                    this.AzureResourceGroupName == input.AzureResourceGroupName ||
                    (this.AzureResourceGroupName != null &&
                    this.AzureResourceGroupName.Equals(input.AzureResourceGroupName))
                ) && 
                (
                    this.AzureResourceName == input.AzureResourceName ||
                    (this.AzureResourceName != null &&
                    this.AzureResourceName.Equals(input.AzureResourceName))
                ) && 
                (
                    this.AzureSubscriptionId == input.AzureSubscriptionId ||
                    (this.AzureSubscriptionId != null &&
                    this.AzureSubscriptionId.Equals(input.AzureSubscriptionId))
                ) && 
                (
                    this.AzureTenantId == input.AzureTenantId ||
                    (this.AzureTenantId != null &&
                    this.AzureTenantId.Equals(input.AzureTenantId))
                ) && 
                (
                    this.AzureUsername == input.AzureUsername ||
                    (this.AzureUsername != null &&
                    this.AzureUsername.Equals(input.AzureUsername))
                ) && 
                (
                    this.UseGwCloudIdentity == input.UseGwCloudIdentity ||
                    this.UseGwCloudIdentity.Equals(input.UseGwCloudIdentity)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AzureClientId != null)
                {
                    hashCode = (hashCode * 59) + this.AzureClientId.GetHashCode();
                }
                if (this.AzureClientSecret != null)
                {
                    hashCode = (hashCode * 59) + this.AzureClientSecret.GetHashCode();
                }
                if (this.AzureResourceGroupName != null)
                {
                    hashCode = (hashCode * 59) + this.AzureResourceGroupName.GetHashCode();
                }
                if (this.AzureResourceName != null)
                {
                    hashCode = (hashCode * 59) + this.AzureResourceName.GetHashCode();
                }
                if (this.AzureSubscriptionId != null)
                {
                    hashCode = (hashCode * 59) + this.AzureSubscriptionId.GetHashCode();
                }
                if (this.AzureTenantId != null)
                {
                    hashCode = (hashCode * 59) + this.AzureTenantId.GetHashCode();
                }
                if (this.AzureUsername != null)
                {
                    hashCode = (hashCode * 59) + this.AzureUsername.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.UseGwCloudIdentity.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
