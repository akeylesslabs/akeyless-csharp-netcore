/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// K8SAuthsConfigLastChange
    /// </summary>
    [DataContract(Name = "K8SAuthsConfigLastChange")]
    public partial class K8SAuthsConfigLastChange : IEquatable<K8SAuthsConfigLastChange>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="K8SAuthsConfigLastChange" /> class.
        /// </summary>
        /// <param name="changedK8sAuthsIds">changedK8sAuthsIds.</param>
        /// <param name="createdK8sAuthsIds">createdK8sAuthsIds.</param>
        /// <param name="deletedK8sAuthsIds">deletedK8sAuthsIds.</param>
        public K8SAuthsConfigLastChange(List<string> changedK8sAuthsIds = default(List<string>), List<string> createdK8sAuthsIds = default(List<string>), List<string> deletedK8sAuthsIds = default(List<string>))
        {
            this.ChangedK8sAuthsIds = changedK8sAuthsIds;
            this.CreatedK8sAuthsIds = createdK8sAuthsIds;
            this.DeletedK8sAuthsIds = deletedK8sAuthsIds;
        }

        /// <summary>
        /// Gets or Sets ChangedK8sAuthsIds
        /// </summary>
        [DataMember(Name = "changed_k8s_auths_ids", EmitDefaultValue = false)]
        public List<string> ChangedK8sAuthsIds { get; set; }

        /// <summary>
        /// Gets or Sets CreatedK8sAuthsIds
        /// </summary>
        [DataMember(Name = "created_k8s_auths_ids", EmitDefaultValue = false)]
        public List<string> CreatedK8sAuthsIds { get; set; }

        /// <summary>
        /// Gets or Sets DeletedK8sAuthsIds
        /// </summary>
        [DataMember(Name = "deleted_k8s_auths_ids", EmitDefaultValue = false)]
        public List<string> DeletedK8sAuthsIds { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class K8SAuthsConfigLastChange {\n");
            sb.Append("  ChangedK8sAuthsIds: ").Append(ChangedK8sAuthsIds).Append("\n");
            sb.Append("  CreatedK8sAuthsIds: ").Append(CreatedK8sAuthsIds).Append("\n");
            sb.Append("  DeletedK8sAuthsIds: ").Append(DeletedK8sAuthsIds).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as K8SAuthsConfigLastChange);
        }

        /// <summary>
        /// Returns true if K8SAuthsConfigLastChange instances are equal
        /// </summary>
        /// <param name="input">Instance of K8SAuthsConfigLastChange to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(K8SAuthsConfigLastChange input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ChangedK8sAuthsIds == input.ChangedK8sAuthsIds ||
                    this.ChangedK8sAuthsIds != null &&
                    input.ChangedK8sAuthsIds != null &&
                    this.ChangedK8sAuthsIds.SequenceEqual(input.ChangedK8sAuthsIds)
                ) && 
                (
                    this.CreatedK8sAuthsIds == input.CreatedK8sAuthsIds ||
                    this.CreatedK8sAuthsIds != null &&
                    input.CreatedK8sAuthsIds != null &&
                    this.CreatedK8sAuthsIds.SequenceEqual(input.CreatedK8sAuthsIds)
                ) && 
                (
                    this.DeletedK8sAuthsIds == input.DeletedK8sAuthsIds ||
                    this.DeletedK8sAuthsIds != null &&
                    input.DeletedK8sAuthsIds != null &&
                    this.DeletedK8sAuthsIds.SequenceEqual(input.DeletedK8sAuthsIds)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ChangedK8sAuthsIds != null)
                {
                    hashCode = (hashCode * 59) + this.ChangedK8sAuthsIds.GetHashCode();
                }
                if (this.CreatedK8sAuthsIds != null)
                {
                    hashCode = (hashCode * 59) + this.CreatedK8sAuthsIds.GetHashCode();
                }
                if (this.DeletedK8sAuthsIds != null)
                {
                    hashCode = (hashCode * 59) + this.DeletedK8sAuthsIds.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
