/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// GetRSAPublicOutput
    /// </summary>
    [DataContract(Name = "getRSAPublicOutput")]
    public partial class GetRSAPublicOutput : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetRSAPublicOutput" /> class.
        /// </summary>
        /// <param name="pem">pem.</param>
        /// <param name="raw">raw.</param>
        /// <param name="ssh">ssh.</param>
        public GetRSAPublicOutput(string pem = default(string), string raw = default(string), string ssh = default(string))
        {
            this.Pem = pem;
            this.Raw = raw;
            this.Ssh = ssh;
        }

        /// <summary>
        /// Gets or Sets Pem
        /// </summary>
        [DataMember(Name = "pem", EmitDefaultValue = false)]
        public string Pem { get; set; }

        /// <summary>
        /// Gets or Sets Raw
        /// </summary>
        [DataMember(Name = "raw", EmitDefaultValue = false)]
        public string Raw { get; set; }

        /// <summary>
        /// Gets or Sets Ssh
        /// </summary>
        [DataMember(Name = "ssh", EmitDefaultValue = false)]
        public string Ssh { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetRSAPublicOutput {\n");
            sb.Append("  Pem: ").Append(Pem).Append("\n");
            sb.Append("  Raw: ").Append(Raw).Append("\n");
            sb.Append("  Ssh: ").Append(Ssh).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
