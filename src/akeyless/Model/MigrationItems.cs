/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 3.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = akeyless.Client.OpenAPIDateConverter;

namespace akeyless.Model
{
    /// <summary>
    /// MigrationItems
    /// </summary>
    [DataContract(Name = "MigrationItems")]
    public partial class MigrationItems : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MigrationItems" /> class.
        /// </summary>
        /// <param name="failed">failed.</param>
        /// <param name="migrated">migrated.</param>
        /// <param name="skipped">skipped.</param>
        /// <param name="total">total.</param>
        /// <param name="updated">updated.</param>
        public MigrationItems(long failed = default(long), long migrated = default(long), long skipped = default(long), long total = default(long), long updated = default(long))
        {
            this.Failed = failed;
            this.Migrated = migrated;
            this.Skipped = skipped;
            this.Total = total;
            this.Updated = updated;
        }

        /// <summary>
        /// Gets or Sets Failed
        /// </summary>
        [DataMember(Name = "failed", EmitDefaultValue = false)]
        public long Failed { get; set; }

        /// <summary>
        /// Gets or Sets Migrated
        /// </summary>
        [DataMember(Name = "migrated", EmitDefaultValue = false)]
        public long Migrated { get; set; }

        /// <summary>
        /// Gets or Sets Skipped
        /// </summary>
        [DataMember(Name = "skipped", EmitDefaultValue = false)]
        public long Skipped { get; set; }

        /// <summary>
        /// Gets or Sets Total
        /// </summary>
        [DataMember(Name = "total", EmitDefaultValue = false)]
        public long Total { get; set; }

        /// <summary>
        /// Gets or Sets Updated
        /// </summary>
        [DataMember(Name = "updated", EmitDefaultValue = false)]
        public long Updated { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class MigrationItems {\n");
            sb.Append("  Failed: ").Append(Failed).Append("\n");
            sb.Append("  Migrated: ").Append(Migrated).Append("\n");
            sb.Append("  Skipped: ").Append(Skipped).Append("\n");
            sb.Append("  Total: ").Append(Total).Append("\n");
            sb.Append("  Updated: ").Append(Updated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
