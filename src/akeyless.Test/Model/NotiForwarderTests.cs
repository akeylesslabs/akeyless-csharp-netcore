/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using akeyless.Api;
using akeyless.Model;
using akeyless.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace akeyless.Test.Model
{
    /// <summary>
    ///  Class for testing NotiForwarder
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class NotiForwarderTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for NotiForwarder
        //private NotiForwarder instance;

        public NotiForwarderTests()
        {
            // TODO uncomment below to create an instance of NotiForwarder
            //instance = new NotiForwarder();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of NotiForwarder
        /// </summary>
        [Fact]
        public void NotiForwarderInstanceTest()
        {
            // TODO uncomment below to test "IsType" NotiForwarder
            //Assert.IsType<NotiForwarder>(instance);
        }


        /// <summary>
        /// Test the property 'ClientPermissions'
        /// </summary>
        [Fact]
        public void ClientPermissionsTest()
        {
            // TODO unit test for the property 'ClientPermissions'
        }
        /// <summary>
        /// Test the property 'Comment'
        /// </summary>
        [Fact]
        public void CommentTest()
        {
            // TODO unit test for the property 'Comment'
        }
        /// <summary>
        /// Test the property 'CreationDate'
        /// </summary>
        [Fact]
        public void CreationDateTest()
        {
            // TODO unit test for the property 'CreationDate'
        }
        /// <summary>
        /// Test the property 'Endpoint'
        /// </summary>
        [Fact]
        public void EndpointTest()
        {
            // TODO unit test for the property 'Endpoint'
        }
        /// <summary>
        /// Test the property 'EventTypes'
        /// </summary>
        [Fact]
        public void EventTypesTest()
        {
            // TODO unit test for the property 'EventTypes'
        }
        /// <summary>
        /// Test the property 'GatewayClusterId'
        /// </summary>
        [Fact]
        public void GatewayClusterIdTest()
        {
            // TODO unit test for the property 'GatewayClusterId'
        }
        /// <summary>
        /// Test the property 'IsEnabled'
        /// </summary>
        [Fact]
        public void IsEnabledTest()
        {
            // TODO unit test for the property 'IsEnabled'
        }
        /// <summary>
        /// Test the property 'LastVersion'
        /// </summary>
        [Fact]
        public void LastVersionTest()
        {
            // TODO unit test for the property 'LastVersion'
        }
        /// <summary>
        /// Test the property 'ModificationDate'
        /// </summary>
        [Fact]
        public void ModificationDateTest()
        {
            // TODO unit test for the property 'ModificationDate'
        }
        /// <summary>
        /// Test the property 'NotiForwarderId'
        /// </summary>
        [Fact]
        public void NotiForwarderIdTest()
        {
            // TODO unit test for the property 'NotiForwarderId'
        }
        /// <summary>
        /// Test the property 'NotiForwarderName'
        /// </summary>
        [Fact]
        public void NotiForwarderNameTest()
        {
            // TODO unit test for the property 'NotiForwarderName'
        }
        /// <summary>
        /// Test the property 'NotiForwarderType'
        /// </summary>
        [Fact]
        public void NotiForwarderTypeTest()
        {
            // TODO unit test for the property 'NotiForwarderType'
        }
        /// <summary>
        /// Test the property 'NotiForwarderVersions'
        /// </summary>
        [Fact]
        public void NotiForwarderVersionsTest()
        {
            // TODO unit test for the property 'NotiForwarderVersions'
        }
        /// <summary>
        /// Test the property 'Paths'
        /// </summary>
        [Fact]
        public void PathsTest()
        {
            // TODO unit test for the property 'Paths'
        }
        /// <summary>
        /// Test the property 'ProtectionKey'
        /// </summary>
        [Fact]
        public void ProtectionKeyTest()
        {
            // TODO unit test for the property 'ProtectionKey'
        }
        /// <summary>
        /// Test the property 'RunnerType'
        /// </summary>
        [Fact]
        public void RunnerTypeTest()
        {
            // TODO unit test for the property 'RunnerType'
        }
        /// <summary>
        /// Test the property 'TimespanInSeconds'
        /// </summary>
        [Fact]
        public void TimespanInSecondsTest()
        {
            // TODO unit test for the property 'TimespanInSeconds'
        }
        /// <summary>
        /// Test the property 'ToEmails'
        /// </summary>
        [Fact]
        public void ToEmailsTest()
        {
            // TODO unit test for the property 'ToEmails'
        }
        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Fact]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }
        /// <summary>
        /// Test the property 'WithCustomerFragment'
        /// </summary>
        [Fact]
        public void WithCustomerFragmentTest()
        {
            // TODO unit test for the property 'WithCustomerFragment'
        }

    }

}
