/* 
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using akeyless.Api;
using akeyless.Model;
using akeyless.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace akeyless.Test
{
    /// <summary>
    ///  Class for testing GeneralConfigPart
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GeneralConfigPartTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GeneralConfigPart
        //private GeneralConfigPart instance;

        public GeneralConfigPartTests()
        {
            // TODO uncomment below to create an instance of GeneralConfigPart
            //instance = new GeneralConfigPart();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GeneralConfigPart
        /// </summary>
        [Fact]
        public void GeneralConfigPartInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" GeneralConfigPart
            //Assert.IsInstanceOfType<GeneralConfigPart> (instance, "variable 'instance' is a GeneralConfigPart");
        }


        /// <summary>
        /// Test the property 'AkeylessUrl'
        /// </summary>
        [Fact]
        public void AkeylessUrlTest()
        {
            // TODO unit test for the property 'AkeylessUrl'
        }
        /// <summary>
        /// Test the property 'ApiTokenTtl'
        /// </summary>
        [Fact]
        public void ApiTokenTtlTest()
        {
            // TODO unit test for the property 'ApiTokenTtl'
        }
        /// <summary>
        /// Test the property 'EnableTls'
        /// </summary>
        [Fact]
        public void EnableTlsTest()
        {
            // TODO unit test for the property 'EnableTls'
        }
        /// <summary>
        /// Test the property 'EnableTlsConfigure'
        /// </summary>
        [Fact]
        public void EnableTlsConfigureTest()
        {
            // TODO unit test for the property 'EnableTlsConfigure'
        }
        /// <summary>
        /// Test the property 'EnableTlsCurl'
        /// </summary>
        [Fact]
        public void EnableTlsCurlTest()
        {
            // TODO unit test for the property 'EnableTlsCurl'
        }
        /// <summary>
        /// Test the property 'EnableTlsHvp'
        /// </summary>
        [Fact]
        public void EnableTlsHvpTest()
        {
            // TODO unit test for the property 'EnableTlsHvp'
        }
        /// <summary>
        /// Test the property 'TcpPort'
        /// </summary>
        [Fact]
        public void TcpPortTest()
        {
            // TODO unit test for the property 'TcpPort'
        }
        /// <summary>
        /// Test the property 'TlsCert'
        /// </summary>
        [Fact]
        public void TlsCertTest()
        {
            // TODO unit test for the property 'TlsCert'
        }
        /// <summary>
        /// Test the property 'TlsKey'
        /// </summary>
        [Fact]
        public void TlsKeyTest()
        {
            // TODO unit test for the property 'TlsKey'
        }

    }

}
