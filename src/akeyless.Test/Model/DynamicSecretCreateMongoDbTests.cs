/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using akeyless.Api;
using akeyless.Model;
using akeyless.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace akeyless.Test.Model
{
    /// <summary>
    ///  Class for testing DynamicSecretCreateMongoDb
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class DynamicSecretCreateMongoDbTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for DynamicSecretCreateMongoDb
        //private DynamicSecretCreateMongoDb instance;

        public DynamicSecretCreateMongoDbTests()
        {
            // TODO uncomment below to create an instance of DynamicSecretCreateMongoDb
            //instance = new DynamicSecretCreateMongoDb();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of DynamicSecretCreateMongoDb
        /// </summary>
        [Fact]
        public void DynamicSecretCreateMongoDbInstanceTest()
        {
            // TODO uncomment below to test "IsType" DynamicSecretCreateMongoDb
            //Assert.IsType<DynamicSecretCreateMongoDb>(instance);
        }


        /// <summary>
        /// Test the property 'DeleteProtection'
        /// </summary>
        [Fact]
        public void DeleteProtectionTest()
        {
            // TODO unit test for the property 'DeleteProtection'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Json'
        /// </summary>
        [Fact]
        public void JsonTest()
        {
            // TODO unit test for the property 'Json'
        }
        /// <summary>
        /// Test the property 'MongodbAtlasApiPrivateKey'
        /// </summary>
        [Fact]
        public void MongodbAtlasApiPrivateKeyTest()
        {
            // TODO unit test for the property 'MongodbAtlasApiPrivateKey'
        }
        /// <summary>
        /// Test the property 'MongodbAtlasApiPublicKey'
        /// </summary>
        [Fact]
        public void MongodbAtlasApiPublicKeyTest()
        {
            // TODO unit test for the property 'MongodbAtlasApiPublicKey'
        }
        /// <summary>
        /// Test the property 'MongodbAtlasProjectId'
        /// </summary>
        [Fact]
        public void MongodbAtlasProjectIdTest()
        {
            // TODO unit test for the property 'MongodbAtlasProjectId'
        }
        /// <summary>
        /// Test the property 'MongodbCustomData'
        /// </summary>
        [Fact]
        public void MongodbCustomDataTest()
        {
            // TODO unit test for the property 'MongodbCustomData'
        }
        /// <summary>
        /// Test the property 'MongodbDefaultAuthDb'
        /// </summary>
        [Fact]
        public void MongodbDefaultAuthDbTest()
        {
            // TODO unit test for the property 'MongodbDefaultAuthDb'
        }
        /// <summary>
        /// Test the property 'MongodbHostPort'
        /// </summary>
        [Fact]
        public void MongodbHostPortTest()
        {
            // TODO unit test for the property 'MongodbHostPort'
        }
        /// <summary>
        /// Test the property 'MongodbName'
        /// </summary>
        [Fact]
        public void MongodbNameTest()
        {
            // TODO unit test for the property 'MongodbName'
        }
        /// <summary>
        /// Test the property 'MongodbPassword'
        /// </summary>
        [Fact]
        public void MongodbPasswordTest()
        {
            // TODO unit test for the property 'MongodbPassword'
        }
        /// <summary>
        /// Test the property 'MongodbRoles'
        /// </summary>
        [Fact]
        public void MongodbRolesTest()
        {
            // TODO unit test for the property 'MongodbRoles'
        }
        /// <summary>
        /// Test the property 'MongodbServerUri'
        /// </summary>
        [Fact]
        public void MongodbServerUriTest()
        {
            // TODO unit test for the property 'MongodbServerUri'
        }
        /// <summary>
        /// Test the property 'MongodbUriOptions'
        /// </summary>
        [Fact]
        public void MongodbUriOptionsTest()
        {
            // TODO unit test for the property 'MongodbUriOptions'
        }
        /// <summary>
        /// Test the property 'MongodbUsername'
        /// </summary>
        [Fact]
        public void MongodbUsernameTest()
        {
            // TODO unit test for the property 'MongodbUsername'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'PasswordLength'
        /// </summary>
        [Fact]
        public void PasswordLengthTest()
        {
            // TODO unit test for the property 'PasswordLength'
        }
        /// <summary>
        /// Test the property 'ProducerEncryptionKeyName'
        /// </summary>
        [Fact]
        public void ProducerEncryptionKeyNameTest()
        {
            // TODO unit test for the property 'ProducerEncryptionKeyName'
        }
        /// <summary>
        /// Test the property 'SecureAccessBastionIssuer'
        /// </summary>
        [Fact]
        public void SecureAccessBastionIssuerTest()
        {
            // TODO unit test for the property 'SecureAccessBastionIssuer'
        }
        /// <summary>
        /// Test the property 'SecureAccessEnable'
        /// </summary>
        [Fact]
        public void SecureAccessEnableTest()
        {
            // TODO unit test for the property 'SecureAccessEnable'
        }
        /// <summary>
        /// Test the property 'SecureAccessHost'
        /// </summary>
        [Fact]
        public void SecureAccessHostTest()
        {
            // TODO unit test for the property 'SecureAccessHost'
        }
        /// <summary>
        /// Test the property 'SecureAccessWeb'
        /// </summary>
        [Fact]
        public void SecureAccessWebTest()
        {
            // TODO unit test for the property 'SecureAccessWeb'
        }
        /// <summary>
        /// Test the property 'Tags'
        /// </summary>
        [Fact]
        public void TagsTest()
        {
            // TODO unit test for the property 'Tags'
        }
        /// <summary>
        /// Test the property 'TargetName'
        /// </summary>
        [Fact]
        public void TargetNameTest()
        {
            // TODO unit test for the property 'TargetName'
        }
        /// <summary>
        /// Test the property 'Token'
        /// </summary>
        [Fact]
        public void TokenTest()
        {
            // TODO unit test for the property 'Token'
        }
        /// <summary>
        /// Test the property 'UidToken'
        /// </summary>
        [Fact]
        public void UidTokenTest()
        {
            // TODO unit test for the property 'UidToken'
        }
        /// <summary>
        /// Test the property 'UserTtl'
        /// </summary>
        [Fact]
        public void UserTtlTest()
        {
            // TODO unit test for the property 'UserTtl'
        }

    }

}
