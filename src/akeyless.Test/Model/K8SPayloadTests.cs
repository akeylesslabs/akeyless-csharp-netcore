/* 
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using akeyless.Api;
using akeyless.Model;
using akeyless.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace akeyless.Test
{
    /// <summary>
    ///  Class for testing K8SPayload
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class K8SPayloadTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for K8SPayload
        //private K8SPayload instance;

        public K8SPayloadTests()
        {
            // TODO uncomment below to create an instance of K8SPayload
            //instance = new K8SPayload();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of K8SPayload
        /// </summary>
        [Fact]
        public void K8SPayloadInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" K8SPayload
            //Assert.IsInstanceOfType<K8SPayload> (instance, "variable 'instance' is a K8SPayload");
        }


        /// <summary>
        /// Test the property 'Ca'
        /// </summary>
        [Fact]
        public void CaTest()
        {
            // TODO unit test for the property 'Ca'
        }
        /// <summary>
        /// Test the property 'ClientCert'
        /// </summary>
        [Fact]
        public void ClientCertTest()
        {
            // TODO unit test for the property 'ClientCert'
        }
        /// <summary>
        /// Test the property 'ClientKey'
        /// </summary>
        [Fact]
        public void ClientKeyTest()
        {
            // TODO unit test for the property 'ClientKey'
        }
        /// <summary>
        /// Test the property 'Namespace'
        /// </summary>
        [Fact]
        public void NamespaceTest()
        {
            // TODO unit test for the property 'Namespace'
        }
        /// <summary>
        /// Test the property 'Password'
        /// </summary>
        [Fact]
        public void PasswordTest()
        {
            // TODO unit test for the property 'Password'
        }
        /// <summary>
        /// Test the property 'Server'
        /// </summary>
        [Fact]
        public void ServerTest()
        {
            // TODO unit test for the property 'Server'
        }
        /// <summary>
        /// Test the property 'SkipSystem'
        /// </summary>
        [Fact]
        public void SkipSystemTest()
        {
            // TODO unit test for the property 'SkipSystem'
        }
        /// <summary>
        /// Test the property 'Token'
        /// </summary>
        [Fact]
        public void TokenTest()
        {
            // TODO unit test for the property 'Token'
        }
        /// <summary>
        /// Test the property 'Username'
        /// </summary>
        [Fact]
        public void UsernameTest()
        {
            // TODO unit test for the property 'Username'
        }

    }

}
