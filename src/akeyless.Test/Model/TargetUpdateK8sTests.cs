/*
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using akeyless.Api;
using akeyless.Model;
using akeyless.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace akeyless.Test.Model
{
    /// <summary>
    ///  Class for testing TargetUpdateK8s
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TargetUpdateK8sTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TargetUpdateK8s
        //private TargetUpdateK8s instance;

        public TargetUpdateK8sTests()
        {
            // TODO uncomment below to create an instance of TargetUpdateK8s
            //instance = new TargetUpdateK8s();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TargetUpdateK8s
        /// </summary>
        [Fact]
        public void TargetUpdateK8sInstanceTest()
        {
            // TODO uncomment below to test "IsType" TargetUpdateK8s
            //Assert.IsType<TargetUpdateK8s>(instance);
        }


        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Json'
        /// </summary>
        [Fact]
        public void JsonTest()
        {
            // TODO unit test for the property 'Json'
        }
        /// <summary>
        /// Test the property 'K8sAuthType'
        /// </summary>
        [Fact]
        public void K8sAuthTypeTest()
        {
            // TODO unit test for the property 'K8sAuthType'
        }
        /// <summary>
        /// Test the property 'K8sClientCertificate'
        /// </summary>
        [Fact]
        public void K8sClientCertificateTest()
        {
            // TODO unit test for the property 'K8sClientCertificate'
        }
        /// <summary>
        /// Test the property 'K8sClientKey'
        /// </summary>
        [Fact]
        public void K8sClientKeyTest()
        {
            // TODO unit test for the property 'K8sClientKey'
        }
        /// <summary>
        /// Test the property 'K8sClusterCaCert'
        /// </summary>
        [Fact]
        public void K8sClusterCaCertTest()
        {
            // TODO unit test for the property 'K8sClusterCaCert'
        }
        /// <summary>
        /// Test the property 'K8sClusterEndpoint'
        /// </summary>
        [Fact]
        public void K8sClusterEndpointTest()
        {
            // TODO unit test for the property 'K8sClusterEndpoint'
        }
        /// <summary>
        /// Test the property 'K8sClusterName'
        /// </summary>
        [Fact]
        public void K8sClusterNameTest()
        {
            // TODO unit test for the property 'K8sClusterName'
        }
        /// <summary>
        /// Test the property 'K8sClusterToken'
        /// </summary>
        [Fact]
        public void K8sClusterTokenTest()
        {
            // TODO unit test for the property 'K8sClusterToken'
        }
        /// <summary>
        /// Test the property 'KeepPrevVersion'
        /// </summary>
        [Fact]
        public void KeepPrevVersionTest()
        {
            // TODO unit test for the property 'KeepPrevVersion'
        }
        /// <summary>
        /// Test the property 'Key'
        /// </summary>
        [Fact]
        public void KeyTest()
        {
            // TODO unit test for the property 'Key'
        }
        /// <summary>
        /// Test the property 'MaxVersions'
        /// </summary>
        [Fact]
        public void MaxVersionsTest()
        {
            // TODO unit test for the property 'MaxVersions'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'NewName'
        /// </summary>
        [Fact]
        public void NewNameTest()
        {
            // TODO unit test for the property 'NewName'
        }
        /// <summary>
        /// Test the property 'Token'
        /// </summary>
        [Fact]
        public void TokenTest()
        {
            // TODO unit test for the property 'Token'
        }
        /// <summary>
        /// Test the property 'UidToken'
        /// </summary>
        [Fact]
        public void UidTokenTest()
        {
            // TODO unit test for the property 'UidToken'
        }
        /// <summary>
        /// Test the property 'UseGwServiceAccount'
        /// </summary>
        [Fact]
        public void UseGwServiceAccountTest()
        {
            // TODO unit test for the property 'UseGwServiceAccount'
        }

    }

}
