/* 
 * Akeyless API
 *
 * The purpose of this application is to provide access to Akeyless API.
 *
 * The version of the OpenAPI document: 2.0
 * Contact: support@akeyless.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using akeyless.Client;
using akeyless.Api;
using akeyless.Model;

namespace akeyless.Test
{
    /// <summary>
    ///  Class for testing V2Api
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class V2ApiTests : IDisposable
    {
        private V2Api instance;

        public V2ApiTests()
        {
            instance = new V2Api();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of V2Api
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' V2Api
            //Assert.IsType(typeof(V2Api), instance, "instance is a V2Api");
        }

        
        /// <summary>
        /// Test AssocRoleAuthMethod
        /// </summary>
        [Fact]
        public void AssocRoleAuthMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AssocRoleAuthMethod body = null;
            //var response = instance.AssocRoleAuthMethod(body);
            //Assert.IsType<CreateRoleAuthMethodAssocOutput> (response, "response is CreateRoleAuthMethodAssocOutput");
        }
        
        /// <summary>
        /// Test AssocTargetItem
        /// </summary>
        [Fact]
        public void AssocTargetItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AssocTargetItem body = null;
            //var response = instance.AssocTargetItem(body);
            //Assert.IsType<CreateTargetItemAssocOutput> (response, "response is CreateTargetItemAssocOutput");
        }
        
        /// <summary>
        /// Test Auth
        /// </summary>
        [Fact]
        public void AuthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Auth body = null;
            //var response = instance.Auth(body);
            //Assert.IsType<AuthOutput> (response, "response is AuthOutput");
        }
        
        /// <summary>
        /// Test Configure
        /// </summary>
        [Fact]
        public void ConfigureTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Configure body = null;
            //var response = instance.Configure(body);
            //Assert.IsType<ConfigureOutput> (response, "response is ConfigureOutput");
        }
        
        /// <summary>
        /// Test CreateAuthMethod
        /// </summary>
        [Fact]
        public void CreateAuthMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAuthMethod body = null;
            //var response = instance.CreateAuthMethod(body);
            //Assert.IsType<CreateAuthMethodOutput> (response, "response is CreateAuthMethodOutput");
        }
        
        /// <summary>
        /// Test CreateAuthMethodAWSIAM
        /// </summary>
        [Fact]
        public void CreateAuthMethodAWSIAMTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAuthMethodAWSIAM body = null;
            //var response = instance.CreateAuthMethodAWSIAM(body);
            //Assert.IsType<CreateAuthMethodAWSIAMOutput> (response, "response is CreateAuthMethodAWSIAMOutput");
        }
        
        /// <summary>
        /// Test CreateAuthMethodAzureAD
        /// </summary>
        [Fact]
        public void CreateAuthMethodAzureADTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAuthMethodAzureAD body = null;
            //var response = instance.CreateAuthMethodAzureAD(body);
            //Assert.IsType<CreateAuthMethodAzureADOutput> (response, "response is CreateAuthMethodAzureADOutput");
        }
        
        /// <summary>
        /// Test CreateAuthMethodHuawei
        /// </summary>
        [Fact]
        public void CreateAuthMethodHuaweiTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAuthMethodHuawei body = null;
            //var response = instance.CreateAuthMethodHuawei(body);
            //Assert.IsType<CreateAuthMethodHuaweiOutput> (response, "response is CreateAuthMethodHuaweiOutput");
        }
        
        /// <summary>
        /// Test CreateAuthMethodOAuth2
        /// </summary>
        [Fact]
        public void CreateAuthMethodOAuth2Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAuthMethodOAuth2 body = null;
            //var response = instance.CreateAuthMethodOAuth2(body);
            //Assert.IsType<CreateAuthMethodOAuth2Output> (response, "response is CreateAuthMethodOAuth2Output");
        }
        
        /// <summary>
        /// Test CreateAuthMethodSAML
        /// </summary>
        [Fact]
        public void CreateAuthMethodSAMLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAuthMethodSAML body = null;
            //var response = instance.CreateAuthMethodSAML(body);
            //Assert.IsType<CreateAuthMethodSAMLOutput> (response, "response is CreateAuthMethodSAMLOutput");
        }
        
        /// <summary>
        /// Test CreateAuthMethodUniversalIdentity
        /// </summary>
        [Fact]
        public void CreateAuthMethodUniversalIdentityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAuthMethodUniversalIdentity body = null;
            //var response = instance.CreateAuthMethodUniversalIdentity(body);
            //Assert.IsType<CreateAuthMethodUniversalIdentityOutput> (response, "response is CreateAuthMethodUniversalIdentityOutput");
        }
        
        /// <summary>
        /// Test CreateAwsTarget
        /// </summary>
        [Fact]
        public void CreateAwsTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAwsTarget body = null;
            //var response = instance.CreateAwsTarget(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test CreateDBTarget
        /// </summary>
        [Fact]
        public void CreateDBTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateDBTarget body = null;
            //var response = instance.CreateDBTarget(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test CreateDynamicSecret
        /// </summary>
        [Fact]
        public void CreateDynamicSecretTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateDynamicSecret body = null;
            //var response = instance.CreateDynamicSecret(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test CreateKey
        /// </summary>
        [Fact]
        public void CreateKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateKey body = null;
            //var response = instance.CreateKey(body);
            //Assert.IsType<CreateKeyOutput> (response, "response is CreateKeyOutput");
        }
        
        /// <summary>
        /// Test CreatePKICertIssuer
        /// </summary>
        [Fact]
        public void CreatePKICertIssuerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreatePKICertIssuer body = null;
            //var response = instance.CreatePKICertIssuer(body);
            //Assert.IsType<CreatePKICertIssuerOutput> (response, "response is CreatePKICertIssuerOutput");
        }
        
        /// <summary>
        /// Test CreateRabbitMQTarget
        /// </summary>
        [Fact]
        public void CreateRabbitMQTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRabbitMQTarget body = null;
            //var response = instance.CreateRabbitMQTarget(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test CreateRdpTarget
        /// </summary>
        [Fact]
        public void CreateRdpTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRdpTarget body = null;
            //var response = instance.CreateRdpTarget(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test CreateRole
        /// </summary>
        [Fact]
        public void CreateRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateRole body = null;
            //var response = instance.CreateRole(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test CreateSSHCertIssuer
        /// </summary>
        [Fact]
        public void CreateSSHCertIssuerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateSSHCertIssuer body = null;
            //var response = instance.CreateSSHCertIssuer(body);
            //Assert.IsType<CreateSSHCertIssuerOutput> (response, "response is CreateSSHCertIssuerOutput");
        }
        
        /// <summary>
        /// Test CreateSSHTarget
        /// </summary>
        [Fact]
        public void CreateSSHTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateSSHTarget body = null;
            //var response = instance.CreateSSHTarget(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test CreateSecret
        /// </summary>
        [Fact]
        public void CreateSecretTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateSecret body = null;
            //var response = instance.CreateSecret(body);
            //Assert.IsType<CreateSecretOutput> (response, "response is CreateSecretOutput");
        }
        
        /// <summary>
        /// Test CreateTarget
        /// </summary>
        [Fact]
        public void CreateTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //var response = instance.CreateTarget(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test CreateWebTarget
        /// </summary>
        [Fact]
        public void CreateWebTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateWebTarget body = null;
            //var response = instance.CreateWebTarget(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test Decrypt
        /// </summary>
        [Fact]
        public void DecryptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Decrypt body = null;
            //var response = instance.Decrypt(body);
            //Assert.IsType<DecryptOutput> (response, "response is DecryptOutput");
        }
        
        /// <summary>
        /// Test DecryptPKCS1
        /// </summary>
        [Fact]
        public void DecryptPKCS1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DecryptPKCS1 body = null;
            //var response = instance.DecryptPKCS1(body);
            //Assert.IsType<DecryptPKCS1Output> (response, "response is DecryptPKCS1Output");
        }
        
        /// <summary>
        /// Test DeleteAuthMethod
        /// </summary>
        [Fact]
        public void DeleteAuthMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteAuthMethod body = null;
            //var response = instance.DeleteAuthMethod(body);
            //Assert.IsType<DeleteAuthMethodOutput> (response, "response is DeleteAuthMethodOutput");
        }
        
        /// <summary>
        /// Test DeleteAuthMethods
        /// </summary>
        [Fact]
        public void DeleteAuthMethodsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteAuthMethods body = null;
            //var response = instance.DeleteAuthMethods(body);
            //Assert.IsType<DeleteAuthMethodsOutput> (response, "response is DeleteAuthMethodsOutput");
        }
        
        /// <summary>
        /// Test DeleteItem
        /// </summary>
        [Fact]
        public void DeleteItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteItem body = null;
            //var response = instance.DeleteItem(body);
            //Assert.IsType<DeleteItemOutput> (response, "response is DeleteItemOutput");
        }
        
        /// <summary>
        /// Test DeleteItems
        /// </summary>
        [Fact]
        public void DeleteItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteItems body = null;
            //var response = instance.DeleteItems(body);
            //Assert.IsType<DeleteItemsOutput> (response, "response is DeleteItemsOutput");
        }
        
        /// <summary>
        /// Test DeleteRole
        /// </summary>
        [Fact]
        public void DeleteRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteRole body = null;
            //var response = instance.DeleteRole(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test DeleteRoleAssociation
        /// </summary>
        [Fact]
        public void DeleteRoleAssociationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteRoleAssociation body = null;
            //var response = instance.DeleteRoleAssociation(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test DeleteRoleRule
        /// </summary>
        [Fact]
        public void DeleteRoleRuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteRoleRule body = null;
            //var response = instance.DeleteRoleRule(body);
            //Assert.IsType<DeleteRoleRuleOutput> (response, "response is DeleteRoleRuleOutput");
        }
        
        /// <summary>
        /// Test DeleteRoles
        /// </summary>
        [Fact]
        public void DeleteRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteRoles body = null;
            //var response = instance.DeleteRoles(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test DeleteTarget
        /// </summary>
        [Fact]
        public void DeleteTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteTarget body = null;
            //var response = instance.DeleteTarget(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test DeleteTargetAssociation
        /// </summary>
        [Fact]
        public void DeleteTargetAssociationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteTargetAssociation body = null;
            //var response = instance.DeleteTargetAssociation(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test DeleteTargets
        /// </summary>
        [Fact]
        public void DeleteTargetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteTargets body = null;
            //var response = instance.DeleteTargets(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test DescribeItem
        /// </summary>
        [Fact]
        public void DescribeItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DescribeItem body = null;
            //var response = instance.DescribeItem(body);
            //Assert.IsType<Item> (response, "response is Item");
        }
        
        /// <summary>
        /// Test Encrypt
        /// </summary>
        [Fact]
        public void EncryptTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Encrypt body = null;
            //var response = instance.Encrypt(body);
            //Assert.IsType<EncryptOutput> (response, "response is EncryptOutput");
        }
        
        /// <summary>
        /// Test EncryptPKCS1
        /// </summary>
        [Fact]
        public void EncryptPKCS1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //EncryptPKCS1 body = null;
            //var response = instance.EncryptPKCS1(body);
            //Assert.IsType<EncryptPKCS1Output> (response, "response is EncryptPKCS1Output");
        }
        
        /// <summary>
        /// Test GatewayAddSubAdmins
        /// </summary>
        [Fact]
        public void GatewayAddSubAdminsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayAddSubAdmins body = null;
            //var response = instance.GatewayAddSubAdmins(body);
            //Assert.IsType<GatewayAddSubAdminsOutput> (response, "response is GatewayAddSubAdminsOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerArtifactory
        /// </summary>
        [Fact]
        public void GatewayCreateProducerArtifactoryTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerArtifactory body = null;
            //var response = instance.GatewayCreateProducerArtifactory(body);
            //Assert.IsType<GatewayCreateProducerArtifactoryOutput> (response, "response is GatewayCreateProducerArtifactoryOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerAws
        /// </summary>
        [Fact]
        public void GatewayCreateProducerAwsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerAws body = null;
            //var response = instance.GatewayCreateProducerAws(body);
            //Assert.IsType<GatewayCreateProducerAwsOutput> (response, "response is GatewayCreateProducerAwsOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerAzure
        /// </summary>
        [Fact]
        public void GatewayCreateProducerAzureTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerAzure body = null;
            //var response = instance.GatewayCreateProducerAzure(body);
            //Assert.IsType<GatewayCreateProducerAzureOutput> (response, "response is GatewayCreateProducerAzureOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerEks
        /// </summary>
        [Fact]
        public void GatewayCreateProducerEksTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerEks body = null;
            //var response = instance.GatewayCreateProducerEks(body);
            //Assert.IsType<GatewayCreateProducerEksOutput> (response, "response is GatewayCreateProducerEksOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerGke
        /// </summary>
        [Fact]
        public void GatewayCreateProducerGkeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerGke body = null;
            //var response = instance.GatewayCreateProducerGke(body);
            //Assert.IsType<GatewayCreateProducerGkeOutput> (response, "response is GatewayCreateProducerGkeOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerMSSQL
        /// </summary>
        [Fact]
        public void GatewayCreateProducerMSSQLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerMSSQL body = null;
            //var response = instance.GatewayCreateProducerMSSQL(body);
            //Assert.IsType<GatewayCreateProducerMSSQLOutput> (response, "response is GatewayCreateProducerMSSQLOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerMongo
        /// </summary>
        [Fact]
        public void GatewayCreateProducerMongoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerMongo body = null;
            //var response = instance.GatewayCreateProducerMongo(body);
            //Assert.IsType<GatewayCreateProducerMongoOutput> (response, "response is GatewayCreateProducerMongoOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerMySQL
        /// </summary>
        [Fact]
        public void GatewayCreateProducerMySQLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerMySQL body = null;
            //var response = instance.GatewayCreateProducerMySQL(body);
            //Assert.IsType<GatewayCreateProducerMySQLOutput> (response, "response is GatewayCreateProducerMySQLOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerPostgreSQL
        /// </summary>
        [Fact]
        public void GatewayCreateProducerPostgreSQLTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerPostgreSQL body = null;
            //var response = instance.GatewayCreateProducerPostgreSQL(body);
            //Assert.IsType<GatewayCreateProducerPostgreSQLOutput> (response, "response is GatewayCreateProducerPostgreSQLOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerRabbitMQ
        /// </summary>
        [Fact]
        public void GatewayCreateProducerRabbitMQTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerRabbitMQ body = null;
            //var response = instance.GatewayCreateProducerRabbitMQ(body);
            //Assert.IsType<GatewayCreateProducerRabbitMQOutput> (response, "response is GatewayCreateProducerRabbitMQOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerRdp
        /// </summary>
        [Fact]
        public void GatewayCreateProducerRdpTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerRdp body = null;
            //var response = instance.GatewayCreateProducerRdp(body);
            //Assert.IsType<GatewayCreateProducerRdpOutput> (response, "response is GatewayCreateProducerRdpOutput");
        }
        
        /// <summary>
        /// Test GatewayCreateProducerVenafi
        /// </summary>
        [Fact]
        public void GatewayCreateProducerVenafiTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayCreateProducerAws body = null;
            //var response = instance.GatewayCreateProducerVenafi(body);
            //Assert.IsType<GatewayCreateProducerAwsOutput> (response, "response is GatewayCreateProducerAwsOutput");
        }
        
        /// <summary>
        /// Test GatewayDeleteProducer
        /// </summary>
        [Fact]
        public void GatewayDeleteProducerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayDeleteProducer body = null;
            //var response = instance.GatewayDeleteProducer(body);
            //Assert.IsType<GatewayDeleteProducerOutput> (response, "response is GatewayDeleteProducerOutput");
        }
        
        /// <summary>
        /// Test GatewayDeleteSubAdmins
        /// </summary>
        [Fact]
        public void GatewayDeleteSubAdminsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayDeleteSubAdmins body = null;
            //var response = instance.GatewayDeleteSubAdmins(body);
            //Assert.IsType<GatewayDeleteSubAdminsOutput> (response, "response is GatewayDeleteSubAdminsOutput");
        }
        
        /// <summary>
        /// Test GatewayGetConfig
        /// </summary>
        [Fact]
        public void GatewayGetConfigTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayGetConfig body = null;
            //var response = instance.GatewayGetConfig(body);
            //Assert.IsType<AkeylessGatewayConfig> (response, "response is AkeylessGatewayConfig");
        }
        
        /// <summary>
        /// Test GatewayGetProducer
        /// </summary>
        [Fact]
        public void GatewayGetProducerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayGetProducer body = null;
            //var response = instance.GatewayGetProducer(body);
            //Assert.IsType<DSProducerDetails> (response, "response is DSProducerDetails");
        }
        
        /// <summary>
        /// Test GatewayGetTmpUsers
        /// </summary>
        [Fact]
        public void GatewayGetTmpUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayGetTmpUsers body = null;
            //var response = instance.GatewayGetTmpUsers(body);
            //Assert.IsType<List<TmpUserData>> (response, "response is List<TmpUserData>");
        }
        
        /// <summary>
        /// Test GatewayListProducers
        /// </summary>
        [Fact]
        public void GatewayListProducersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayListProducers body = null;
            //var response = instance.GatewayListProducers(body);
            //Assert.IsType<GetProducersListReplyObj> (response, "response is GetProducersListReplyObj");
        }
        
        /// <summary>
        /// Test GatewayListSubAdmins
        /// </summary>
        [Fact]
        public void GatewayListSubAdminsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayListSubAdmins body = null;
            //var response = instance.GatewayListSubAdmins(body);
            //Assert.IsType<GetSubAdminsListReplyObj> (response, "response is GetSubAdminsListReplyObj");
        }
        
        /// <summary>
        /// Test GatewayRevokeTmpUsers
        /// </summary>
        [Fact]
        public void GatewayRevokeTmpUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayRevokeTmpUsers body = null;
            //instance.GatewayRevokeTmpUsers(body);
            
        }
        
        /// <summary>
        /// Test GatewayStartProducer
        /// </summary>
        [Fact]
        public void GatewayStartProducerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayStartProducer body = null;
            //var response = instance.GatewayStartProducer(body);
            //Assert.IsType<GatewayStartProducerOutput> (response, "response is GatewayStartProducerOutput");
        }
        
        /// <summary>
        /// Test GatewayStopProducer
        /// </summary>
        [Fact]
        public void GatewayStopProducerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayStopProducer body = null;
            //var response = instance.GatewayStopProducer(body);
            //Assert.IsType<GatewayStopProducerOutput> (response, "response is GatewayStopProducerOutput");
        }
        
        /// <summary>
        /// Test GatewayUpdateTmpUsers
        /// </summary>
        [Fact]
        public void GatewayUpdateTmpUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GatewayUpdateTmpUsers body = null;
            //instance.GatewayUpdateTmpUsers(body);
            
        }
        
        /// <summary>
        /// Test GetAccountLogo
        /// </summary>
        [Fact]
        public void GetAccountLogoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAccountLogo();
            //Assert.IsType<Dictionary<string, string>> (response, "response is Dictionary<string, string>");
        }
        
        /// <summary>
        /// Test GetAuthMethod
        /// </summary>
        [Fact]
        public void GetAuthMethodTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetAuthMethod body = null;
            //var response = instance.GetAuthMethod(body);
            //Assert.IsType<AuthMethod> (response, "response is AuthMethod");
        }
        
        /// <summary>
        /// Test GetDynamicPkiCertificate
        /// </summary>
        [Fact]
        public void GetDynamicPkiCertificateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetDynamicPkiCertificate();
            //Assert.IsType<Dictionary<string, string>> (response, "response is Dictionary<string, string>");
        }
        
        /// <summary>
        /// Test GetDynamicSecretValue
        /// </summary>
        [Fact]
        public void GetDynamicSecretValueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetDynamicSecretValue body = null;
            //var response = instance.GetDynamicSecretValue(body);
            //Assert.IsType<Dictionary<string, string>> (response, "response is Dictionary<string, string>");
        }
        
        /// <summary>
        /// Test GetRSAPublic
        /// </summary>
        [Fact]
        public void GetRSAPublicTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetRSAPublic body = null;
            //var response = instance.GetRSAPublic(body);
            //Assert.IsType<GetRSAPublicOutput> (response, "response is GetRSAPublicOutput");
        }
        
        /// <summary>
        /// Test GetRole
        /// </summary>
        [Fact]
        public void GetRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetRole body = null;
            //var response = instance.GetRole(body);
            //Assert.IsType<Role> (response, "response is Role");
        }
        
        /// <summary>
        /// Test GetSSHCertificate
        /// </summary>
        [Fact]
        public void GetSSHCertificateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetSSHCertificate body = null;
            //var response = instance.GetSSHCertificate(body);
            //Assert.IsType<GetSSHCertificateOutput> (response, "response is GetSSHCertificateOutput");
        }
        
        /// <summary>
        /// Test GetSecretValue
        /// </summary>
        [Fact]
        public void GetSecretValueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetSecretValue body = null;
            //var response = instance.GetSecretValue(body);
            //Assert.IsType<Dictionary<string, string>> (response, "response is Dictionary<string, string>");
        }
        
        /// <summary>
        /// Test GetTarget
        /// </summary>
        [Fact]
        public void GetTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetTarget body = null;
            //var response = instance.GetTarget(body);
            //Assert.IsType<Target> (response, "response is Target");
        }
        
        /// <summary>
        /// Test GetTargetDetails
        /// </summary>
        [Fact]
        public void GetTargetDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetTargetDetails body = null;
            //var response = instance.GetTargetDetails(body);
            //Assert.IsType<GetTargetDetailsOutput> (response, "response is GetTargetDetailsOutput");
        }
        
        /// <summary>
        /// Test ListAuthMethods
        /// </summary>
        [Fact]
        public void ListAuthMethodsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ListAuthMethods body = null;
            //var response = instance.ListAuthMethods(body);
            //Assert.IsType<ListAuthMethodsOutput> (response, "response is ListAuthMethodsOutput");
        }
        
        /// <summary>
        /// Test ListItems
        /// </summary>
        [Fact]
        public void ListItemsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ListItems body = null;
            //var response = instance.ListItems(body);
            //Assert.IsType<ListItemsInPathOutput> (response, "response is ListItemsInPathOutput");
        }
        
        /// <summary>
        /// Test ListRoles
        /// </summary>
        [Fact]
        public void ListRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ListRoles body = null;
            //var response = instance.ListRoles(body);
            //Assert.IsType<ListRolesOutput> (response, "response is ListRolesOutput");
        }
        
        /// <summary>
        /// Test ListTargets
        /// </summary>
        [Fact]
        public void ListTargetsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ListTargets body = null;
            //var response = instance.ListTargets(body);
            //Assert.IsType<ListTargetsOutput> (response, "response is ListTargetsOutput");
        }
        
        /// <summary>
        /// Test MoveObjects
        /// </summary>
        [Fact]
        public void MoveObjectsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MoveObjects body = null;
            //var response = instance.MoveObjects(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test RawCreds
        /// </summary>
        [Fact]
        public void RawCredsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RawCreds body = null;
            //var response = instance.RawCreds(body);
            //Assert.IsType<SystemAccessCredentialsReplyObj> (response, "response is SystemAccessCredentialsReplyObj");
        }
        
        /// <summary>
        /// Test RefreshKey
        /// </summary>
        [Fact]
        public void RefreshKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RefreshKey body = null;
            //var response = instance.RefreshKey(body);
            //Assert.IsType<RefreshKeyOutput> (response, "response is RefreshKeyOutput");
        }
        
        /// <summary>
        /// Test ReverseRBAC
        /// </summary>
        [Fact]
        public void ReverseRBACTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ReverseRBAC body = null;
            //var response = instance.ReverseRBAC(body);
            //Assert.IsType<ReverseRBACOutput> (response, "response is ReverseRBACOutput");
        }
        
        /// <summary>
        /// Test RollbackSecret
        /// </summary>
        [Fact]
        public void RollbackSecretTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RollbackSecret body = null;
            //var response = instance.RollbackSecret(body);
            //Assert.IsType<RollbackSecretOutput> (response, "response is RollbackSecretOutput");
        }
        
        /// <summary>
        /// Test RotateKey
        /// </summary>
        [Fact]
        public void RotateKeyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RotateKey body = null;
            //var response = instance.RotateKey(body);
            //Assert.IsType<RotateKeyOutput> (response, "response is RotateKeyOutput");
        }
        
        /// <summary>
        /// Test SetItemState
        /// </summary>
        [Fact]
        public void SetItemStateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetItemState body = null;
            //var response = instance.SetItemState(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test SetRoleRule
        /// </summary>
        [Fact]
        public void SetRoleRuleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetRoleRule body = null;
            //var response = instance.SetRoleRule(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test SignPKCS1
        /// </summary>
        [Fact]
        public void SignPKCS1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SignPKCS1 body = null;
            //var response = instance.SignPKCS1(body);
            //Assert.IsType<SignPKCS1Output> (response, "response is SignPKCS1Output");
        }
        
        /// <summary>
        /// Test StaticCredsAuth
        /// </summary>
        [Fact]
        public void StaticCredsAuthTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //StaticCredsAuth body = null;
            //var response = instance.StaticCredsAuth(body);
            //Assert.IsType<StaticCredsAuthOutput> (response, "response is StaticCredsAuthOutput");
        }
        
        /// <summary>
        /// Test UidCreateChildToken
        /// </summary>
        [Fact]
        public void UidCreateChildTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UidCreateChildToken body = null;
            //var response = instance.UidCreateChildToken(body);
            //Assert.IsType<UidCreateChildTokenOutput> (response, "response is UidCreateChildTokenOutput");
        }
        
        /// <summary>
        /// Test UidGenerateToken
        /// </summary>
        [Fact]
        public void UidGenerateTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UidGenerateToken body = null;
            //var response = instance.UidGenerateToken(body);
            //Assert.IsType<UidGenerateTokenOutput> (response, "response is UidGenerateTokenOutput");
        }
        
        /// <summary>
        /// Test UidListChildren
        /// </summary>
        [Fact]
        public void UidListChildrenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UidListChildren body = null;
            //var response = instance.UidListChildren(body);
            //Assert.IsType<UniversalIdentityDetails> (response, "response is UniversalIdentityDetails");
        }
        
        /// <summary>
        /// Test UidRevokeToken
        /// </summary>
        [Fact]
        public void UidRevokeTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UidRevokeToken body = null;
            //var response = instance.UidRevokeToken(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test UidRotateToken
        /// </summary>
        [Fact]
        public void UidRotateTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UidRotateToken body = null;
            //var response = instance.UidRotateToken(body);
            //Assert.IsType<UidRotateTokenOutput> (response, "response is UidRotateTokenOutput");
        }
        
        /// <summary>
        /// Test UpdateAWSTargetDetails
        /// </summary>
        [Fact]
        public void UpdateAWSTargetDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateAWSTargetDetails body = null;
            //var response = instance.UpdateAWSTargetDetails(body);
            //Assert.IsType<UpdateTargetOutput> (response, "response is UpdateTargetOutput");
        }
        
        /// <summary>
        /// Test UpdateDBTargetDetails
        /// </summary>
        [Fact]
        public void UpdateDBTargetDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateDBTargetDetails body = null;
            //var response = instance.UpdateDBTargetDetails(body);
            //Assert.IsType<UpdateTargetOutput> (response, "response is UpdateTargetOutput");
        }
        
        /// <summary>
        /// Test UpdateItem
        /// </summary>
        [Fact]
        public void UpdateItemTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateItem body = null;
            //var response = instance.UpdateItem(body);
            //Assert.IsType<UpdateItemOutput> (response, "response is UpdateItemOutput");
        }
        
        /// <summary>
        /// Test UpdateRDPTargetDetails
        /// </summary>
        [Fact]
        public void UpdateRDPTargetDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateRDPTargetDetails body = null;
            //var response = instance.UpdateRDPTargetDetails(body);
            //Assert.IsType<UpdateTargetOutput> (response, "response is UpdateTargetOutput");
        }
        
        /// <summary>
        /// Test UpdateRabbitMQTargetDetails
        /// </summary>
        [Fact]
        public void UpdateRabbitMQTargetDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateRabbitMQTargetDetails body = null;
            //var response = instance.UpdateRabbitMQTargetDetails(body);
            //Assert.IsType<UpdateTargetOutput> (response, "response is UpdateTargetOutput");
        }
        
        /// <summary>
        /// Test UpdateRole
        /// </summary>
        [Fact]
        public void UpdateRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateRole body = null;
            //var response = instance.UpdateRole(body);
            //Assert.IsType<UpdateRoleOutput> (response, "response is UpdateRoleOutput");
        }
        
        /// <summary>
        /// Test UpdateSSHTargetDetails
        /// </summary>
        [Fact]
        public void UpdateSSHTargetDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateSSHTargetDetails body = null;
            //var response = instance.UpdateSSHTargetDetails(body);
            //Assert.IsType<UpdateTargetOutput> (response, "response is UpdateTargetOutput");
        }
        
        /// <summary>
        /// Test UpdateSecretVal
        /// </summary>
        [Fact]
        public void UpdateSecretValTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateSecretVal body = null;
            //var response = instance.UpdateSecretVal(body);
            //Assert.IsType<UpdateSecretValOutput> (response, "response is UpdateSecretValOutput");
        }
        
        /// <summary>
        /// Test UpdateTarget
        /// </summary>
        [Fact]
        public void UpdateTargetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateTarget body = null;
            //var response = instance.UpdateTarget(body);
            //Assert.IsType<UpdateTargetOutput> (response, "response is UpdateTargetOutput");
        }
        
        /// <summary>
        /// Test UpdateTargetDetails
        /// </summary>
        [Fact]
        public void UpdateTargetDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Object body = null;
            //var response = instance.UpdateTargetDetails(body);
            //Assert.IsType<UpdateTargetOutput> (response, "response is UpdateTargetOutput");
        }
        
        /// <summary>
        /// Test UpdateWebTargetDetails
        /// </summary>
        [Fact]
        public void UpdateWebTargetDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UpdateWebTargetDetails body = null;
            //var response = instance.UpdateWebTargetDetails(body);
            //Assert.IsType<UpdateTargetOutput> (response, "response is UpdateTargetOutput");
        }
        
        /// <summary>
        /// Test UploadRSA
        /// </summary>
        [Fact]
        public void UploadRSATest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UploadRSA body = null;
            //var response = instance.UploadRSA(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test VerifyPKCS1
        /// </summary>
        [Fact]
        public void VerifyPKCS1Test()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //VerifyPKCS1 body = null;
            //var response = instance.VerifyPKCS1(body);
            //Assert.IsType<Object> (response, "response is Object");
        }
        
    }

}
